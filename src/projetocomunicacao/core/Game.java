/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package projetocomunicacao.core;

import java.awt.*;
import java.io.IOException;
import java.util.Arrays;
import java.util.Collections;
import java.util.LinkedList;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.SwingUtilities;
import projetocomunicacao.fachada.*;
import projetocomunicacao.game.Peca;
import projetocomunicacao.rede.*;

/**
 *
 * @author Vinícius
 */
public class Game extends javax.swing.JFrame {

    private boolean drag = false;
    private int mouse_x = 0;
    private int mouse_y = 0;
    private int turno = 0;
    public int last_position_right = 0;
    public int last_position_left = -1;
    private int last_position_left_contour=0;
    private int last_position_right_contour=0;
    private int lastx_peca1 = 0;
    private int lasty_peca1 = 0;
    private int lastx_peca2 = 0;
    private int lasty_peca2 = 0;
    private int lastx_peca3 = 0;
    private int lasty_peca3 = 0;
    private int lastx_peca4 = 0;
    private int lasty_peca4 = 0;
    private int lastx_peca5 = 0;
    private int lasty_peca5 = 0;
    private int lastx_peca6 = 0;
    private int lasty_peca6 = 0;
    private int starting_location_x = 0;
    private int starting_location_y = 0;
    private String lastPath;
    private FachadaCliente fachada;
    private TelaInicial tela;
    private int pausas_restantes_d1 = 3;
    private int pausas_restantes_d2 = 3;

    /**
     * Creates new form Game
     */
    public Game(FachadaCliente fachada, TelaInicial tela) {
        initComponents();
        this.fachada = fachada;
        this.lastPath = "";
        this.tela = tela;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        WinnerDialog = new javax.swing.JDialog();
        winner_panel = new javax.swing.JPanel();
        medal_label = new javax.swing.JLabel();
        vitoria = new javax.swing.JLabel();
        duplavencedora = new javax.swing.JLabel();
        rodadaganha = new javax.swing.JLabel();
        winner_background = new javax.swing.JLabel();
        ChampionDialog = new javax.swing.JDialog();
        champion_panel = new javax.swing.JPanel();
        trophy_label = new javax.swing.JLabel();
        campeao = new javax.swing.JLabel();
        duplacampea = new javax.swing.JLabel();
        duplacampea1 = new javax.swing.JLabel();
        champion_background = new javax.swing.JLabel();
        PerdedorDialog = new javax.swing.JDialog();
        perdedor_panel = new javax.swing.JPanel();
        cry_label = new javax.swing.JLabel();
        perdedor_label = new javax.swing.JLabel();
        perdedor_label1 = new javax.swing.JLabel();
        perdedor_background = new javax.swing.JLabel();
        QuitDialog = new javax.swing.JDialog();
        quit_panel = new javax.swing.JPanel();
        pergunta = new javax.swing.JLabel();
        sair = new javax.swing.JButton();
        cancelar = new javax.swing.JButton();
        quit_background = new javax.swing.JLabel();
        ToqueDialog = new javax.swing.JDialog();
        toque_panel = new javax.swing.JPanel();
        jogadas = new javax.swing.JLabel();
        mudar = new javax.swing.JLabel();
        toque_background = new javax.swing.JLabel();
        LoserDialog = new javax.swing.JDialog();
        loser_panel = new javax.swing.JPanel();
        derrota = new javax.swing.JLabel();
        duplaperdedora = new javax.swing.JLabel();
        rodadaperdida = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        loser_background = new javax.swing.JLabel();
        ContagemVitoriaDialog = new javax.swing.JDialog();
        win_count_panel = new javax.swing.JPanel();
        winner_count_icon = new javax.swing.JLabel();
        win_count = new javax.swing.JLabel();
        dupla1contagemv = new javax.swing.JLabel();
        dupla2contagemv = new javax.swing.JLabel();
        label_pontosdupla1v = new javax.swing.JLabel();
        label_pontosdupla2v = new javax.swing.JLabel();
        winner_count_background = new javax.swing.JLabel();
        ContagemDerrotaDialog = new javax.swing.JDialog();
        lose_count_panel = new javax.swing.JPanel();
        loser_count_icon = new javax.swing.JLabel();
        derrota_count = new javax.swing.JLabel();
        dupla1contagemd = new javax.swing.JLabel();
        dupla2contagemd = new javax.swing.JLabel();
        label_pontosdupla1d = new javax.swing.JLabel();
        label_pontosdupla2d = new javax.swing.JLabel();
        loser_count_background = new javax.swing.JLabel();
        DisconnectDialog = new javax.swing.JDialog();
        disconnect_panel = new javax.swing.JPanel();
        jogador_desconectado = new javax.swing.JLabel();
        exit_disconnect = new javax.swing.JButton();
        espere = new javax.swing.JLabel();
        disconnect_icon = new javax.swing.JLabel();
        espere1 = new javax.swing.JLabel();
        disconnect_background = new javax.swing.JLabel();
        CloseDialog = new javax.swing.JDialog();
        close_panel = new javax.swing.JPanel();
        alert_label = new javax.swing.JLabel();
        closed = new javax.swing.JLabel();
        sendo = new javax.swing.JLabel();
        finalizado = new javax.swing.JLabel();
        sair_button = new javax.swing.JButton();
        close_background = new javax.swing.JLabel();
        game_panel = new javax.swing.JPanel();
        ExitGameButton = new javax.swing.JButton();
        peca1jogador4 = new javax.swing.JButton();
        peca2jogador4 = new javax.swing.JButton();
        peca3jogador4 = new javax.swing.JButton();
        peca4jogador4 = new javax.swing.JButton();
        peca5jogador4 = new javax.swing.JButton();
        peca6jogador4 = new javax.swing.JButton();
        peca1jogador3 = new javax.swing.JButton();
        peca2jogador3 = new javax.swing.JButton();
        peca3jogador3 = new javax.swing.JButton();
        peca4jogador3 = new javax.swing.JButton();
        peca5jogador3 = new javax.swing.JButton();
        peca6jogador3 = new javax.swing.JButton();
        peca1jogador2 = new javax.swing.JButton();
        peca2jogador2 = new javax.swing.JButton();
        peca3jogador2 = new javax.swing.JButton();
        peca4jogador2 = new javax.swing.JButton();
        peca5jogador2 = new javax.swing.JButton();
        peca6jogador2 = new javax.swing.JButton();
        peca1jogador1 = new javax.swing.JButton();
        peca2jogador1 = new javax.swing.JButton();
        peca3jogador1 = new javax.swing.JButton();
        peca4jogador1 = new javax.swing.JButton();
        peca5jogador1 = new javax.swing.JButton();
        peca6jogador1 = new javax.swing.JButton();
        NomeJogador1 = new javax.swing.JLabel();
        DuplaJogador1 = new javax.swing.JLabel();
        NomeJogador2 = new javax.swing.JLabel();
        DuplaJogador2 = new javax.swing.JLabel();
        NomeJogador3 = new javax.swing.JLabel();
        DuplaJogador3 = new javax.swing.JLabel();
        NomeJogador4 = new javax.swing.JLabel();
        DuplaJogador4 = new javax.swing.JLabel();
        ScoreDupla1 = new javax.swing.JLabel();
        ScoreDupla2 = new javax.swing.JLabel();
        posicao_0 = new javax.swing.JLabel();
        posicao_1r = new javax.swing.JLabel();
        posicao_2r = new javax.swing.JLabel();
        posicao_3r = new javax.swing.JLabel();
        posicao_4r = new javax.swing.JLabel();
        posicao_5r = new javax.swing.JLabel();
        posicao_6r = new javax.swing.JLabel();
        posicao_7r = new javax.swing.JLabel();
        posicao_8r = new javax.swing.JLabel();
        posicao_9r = new javax.swing.JLabel();
        posicao_10r = new javax.swing.JLabel();
        posicao_11r = new javax.swing.JLabel();
        posicao_12r = new javax.swing.JLabel();
        posicao_13r = new javax.swing.JLabel();
        posicao_14r = new javax.swing.JLabel();
        posicao_15r = new javax.swing.JLabel();
        posicao_16r = new javax.swing.JLabel();
        posicao_17r = new javax.swing.JLabel();
        posicao_18r = new javax.swing.JLabel();
        posicao_19r = new javax.swing.JLabel();
        posicao_20r = new javax.swing.JLabel();
        posicao_1l = new javax.swing.JLabel();
        posicao_2l = new javax.swing.JLabel();
        posicao_3l = new javax.swing.JLabel();
        posicao_4l = new javax.swing.JLabel();
        posicao_5l = new javax.swing.JLabel();
        posicao_6l = new javax.swing.JLabel();
        posicao_7l = new javax.swing.JLabel();
        posicao_8l = new javax.swing.JLabel();
        posicao_9l = new javax.swing.JLabel();
        posicao_10l = new javax.swing.JLabel();
        posicao_11l = new javax.swing.JLabel();
        posicao_12l = new javax.swing.JLabel();
        posicao_13l = new javax.swing.JLabel();
        posicao_14l = new javax.swing.JLabel();
        posicao_15l = new javax.swing.JLabel();
        posicao_16l = new javax.swing.JLabel();
        posicao_17l = new javax.swing.JLabel();
        posicao_18l = new javax.swing.JLabel();
        posicao_19l = new javax.swing.JLabel();
        posicao_20l = new javax.swing.JLabel();
        Background = new javax.swing.JLabel();

        WinnerDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        WinnerDialog.setTitle("Vitória!");
        WinnerDialog.setLocationByPlatform(true);
        WinnerDialog.setMinimumSize(new java.awt.Dimension(400, 175));
        WinnerDialog.setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        WinnerDialog.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        WinnerDialog.setResizable(false);
        WinnerDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                WinnerDialogWindowActivated(evt);
            }
        });
        WinnerDialog.getContentPane().setLayout(null);

        winner_panel.setMinimumSize(new java.awt.Dimension(400, 175));
        winner_panel.setOpaque(false);

        medal_label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetocomunicacao/resources/medal-icon.png"))); // NOI18N

        vitoria.setFont(new java.awt.Font("Verdana", 0, 24));
        vitoria.setForeground(new java.awt.Color(0, 153, 0));
        vitoria.setText("Vitória!");

        duplavencedora.setFont(new java.awt.Font("Verdana", 0, 22));
        duplavencedora.setForeground(new java.awt.Color(255, 255, 255));
        duplavencedora.setText("Sua dupla ganhou");

        rodadaganha.setFont(new java.awt.Font("Verdana", 0, 22));
        rodadaganha.setForeground(new java.awt.Color(255, 255, 255));
        rodadaganha.setText("essa rodada.");

        javax.swing.GroupLayout winner_panelLayout = new javax.swing.GroupLayout(winner_panel);
        winner_panel.setLayout(winner_panelLayout);
        winner_panelLayout.setHorizontalGroup(
            winner_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(winner_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(medal_label)
                .addGroup(winner_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(winner_panelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(vitoria)
                        .addGap(87, 87, 87))
                    .addGroup(winner_panelLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(winner_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rodadaganha)
                            .addComponent(duplavencedora))
                        .addContainerGap(32, Short.MAX_VALUE))))
        );
        winner_panelLayout.setVerticalGroup(
            winner_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(winner_panelLayout.createSequentialGroup()
                .addGroup(winner_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(winner_panelLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(vitoria)
                        .addGap(9, 9, 9)
                        .addComponent(duplavencedora)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rodadaganha))
                    .addGroup(winner_panelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(medal_label)))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        WinnerDialog.getContentPane().add(winner_panel);
        winner_panel.setBounds(0, 0, 400, 175);

        winner_background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetocomunicacao/resources/woodenBackgroundSmall.png"))); // NOI18N
        WinnerDialog.getContentPane().add(winner_background);
        winner_background.setBounds(0, 1, 400, 175);

        ChampionDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        ChampionDialog.setTitle("Campeão!");
        ChampionDialog.setLocationByPlatform(true);
        ChampionDialog.setMinimumSize(new java.awt.Dimension(600, 220));
        ChampionDialog.setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        ChampionDialog.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        ChampionDialog.setResizable(false);
        ChampionDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                ChampionDialogWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                ChampionDialogWindowOpened(evt);
            }
        });
        ChampionDialog.getContentPane().setLayout(null);

        champion_panel.setMinimumSize(new java.awt.Dimension(400, 175));
        champion_panel.setOpaque(false);

        trophy_label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetocomunicacao/resources/icon_trophy.png"))); // NOI18N

        campeao.setFont(new java.awt.Font("Verdana", 0, 42));
        campeao.setForeground(new java.awt.Color(0, 153, 0));
        campeao.setText("Campeão!");

        duplacampea.setFont(new java.awt.Font("Verdana", 0, 22));
        duplacampea.setForeground(new java.awt.Color(255, 255, 255));
        duplacampea.setText("Parabéns! Sua dupla foi ");

        duplacampea1.setFont(new java.awt.Font("Verdana", 0, 22));
        duplacampea1.setForeground(new java.awt.Color(255, 255, 255));
        duplacampea1.setText("a campeã da partida!");

        javax.swing.GroupLayout champion_panelLayout = new javax.swing.GroupLayout(champion_panel);
        champion_panel.setLayout(champion_panelLayout);
        champion_panelLayout.setHorizontalGroup(
            champion_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(champion_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(trophy_label, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(champion_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(campeao, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(duplacampea)
                    .addComponent(duplacampea1))
                .addGap(57, 57, 57))
        );
        champion_panelLayout.setVerticalGroup(
            champion_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, champion_panelLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(campeao, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(duplacampea)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(duplacampea1)
                .addGap(59, 59, 59))
            .addGroup(champion_panelLayout.createSequentialGroup()
                .addComponent(trophy_label, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        ChampionDialog.getContentPane().add(champion_panel);
        champion_panel.setBounds(0, 0, 600, 220);

        champion_background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetocomunicacao/resources/background_champion.jpg"))); // NOI18N
        ChampionDialog.getContentPane().add(champion_background);
        champion_background.setBounds(0, 1, 600, 220);

        PerdedorDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        PerdedorDialog.setTitle("Derrota!");
        PerdedorDialog.setMinimumSize(new java.awt.Dimension(600, 220));
        PerdedorDialog.setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        PerdedorDialog.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        PerdedorDialog.setResizable(false);
        PerdedorDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                PerdedorDialogWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                PerdedorDialogWindowOpened(evt);
            }
        });
        PerdedorDialog.getContentPane().setLayout(null);

        perdedor_panel.setMinimumSize(new java.awt.Dimension(400, 175));
        perdedor_panel.setOpaque(false);

        cry_label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetocomunicacao/resources/icon_perde.png"))); // NOI18N

        perdedor_label.setFont(new java.awt.Font("Verdana", 0, 24));
        perdedor_label.setForeground(new java.awt.Color(255, 0, 51));
        perdedor_label.setText("Você perdeu O Jogo.");

        perdedor_label1.setFont(new java.awt.Font("Verdana", 0, 22));
        perdedor_label1.setForeground(new java.awt.Color(255, 255, 255));
        perdedor_label1.setText("Sua dupla perdeu a partida!");

        javax.swing.GroupLayout perdedor_panelLayout = new javax.swing.GroupLayout(perdedor_panel);
        perdedor_panel.setLayout(perdedor_panelLayout);
        perdedor_panelLayout.setHorizontalGroup(
            perdedor_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(perdedor_panelLayout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addComponent(cry_label, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(perdedor_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(perdedor_label1)
                    .addComponent(perdedor_label, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51))
        );
        perdedor_panelLayout.setVerticalGroup(
            perdedor_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, perdedor_panelLayout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(perdedor_label, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(perdedor_label1)
                .addGap(81, 81, 81))
            .addGroup(perdedor_panelLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(cry_label)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        PerdedorDialog.getContentPane().add(perdedor_panel);
        perdedor_panel.setBounds(0, 0, 600, 220);

        perdedor_background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetocomunicacao/resources/background_champion.jpg"))); // NOI18N
        PerdedorDialog.getContentPane().add(perdedor_background);
        perdedor_background.setBounds(0, 1, 600, 220);

        QuitDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        QuitDialog.setTitle("Quit");
        QuitDialog.setLocationByPlatform(true);
        QuitDialog.setMinimumSize(new java.awt.Dimension(400, 175));
        QuitDialog.setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        QuitDialog.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        QuitDialog.setResizable(false);
        QuitDialog.getContentPane().setLayout(null);

        quit_panel.setMinimumSize(new java.awt.Dimension(400, 175));
        quit_panel.setOpaque(false);

        pergunta.setFont(new java.awt.Font("Verdana", 0, 18));
        pergunta.setForeground(new java.awt.Color(255, 255, 255));
        pergunta.setText("Você deseja realmente sair da partida?");
        pergunta.setToolTipText("");

        sair.setText("Sair");
        sair.setToolTipText("");
        sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sairActionPerformed(evt);
            }
        });

        cancelar.setText("Cancelar");
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout quit_panelLayout = new javax.swing.GroupLayout(quit_panel);
        quit_panel.setLayout(quit_panelLayout);
        quit_panelLayout.setHorizontalGroup(
            quit_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, quit_panelLayout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addGroup(quit_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pergunta)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, quit_panelLayout.createSequentialGroup()
                        .addComponent(sair, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                        .addGap(204, 204, 204)
                        .addComponent(cancelar)))
                .addGap(20, 20, 20))
        );
        quit_panelLayout.setVerticalGroup(
            quit_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(quit_panelLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(pergunta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                .addGroup(quit_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelar)
                    .addComponent(sair))
                .addGap(44, 44, 44))
        );

        QuitDialog.getContentPane().add(quit_panel);
        quit_panel.setBounds(0, 0, 400, 175);

        quit_background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetocomunicacao/resources/woodenBackgroundSmall.png"))); // NOI18N
        QuitDialog.getContentPane().add(quit_background);
        quit_background.setBounds(0, 1, 400, 175);

        ToqueDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        ToqueDialog.setTitle("Toque");
        ToqueDialog.setLocationByPlatform(true);
        ToqueDialog.setMinimumSize(new java.awt.Dimension(400, 175));
        ToqueDialog.setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        ToqueDialog.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        ToqueDialog.setResizable(false);
        ToqueDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                ToqueDialogWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                ToqueDialogWindowOpened(evt);
            }
        });
        ToqueDialog.getContentPane().setLayout(null);

        toque_panel.setMinimumSize(new java.awt.Dimension(400, 175));
        toque_panel.setOpaque(false);

        jogadas.setFont(new java.awt.Font("Verdana", 0, 24));
        jogadas.setForeground(new java.awt.Color(255, 255, 255));
        jogadas.setText("Não há jogadas disponíveis!");

        mudar.setFont(new java.awt.Font("Verdana", 0, 22));
        mudar.setForeground(new java.awt.Color(255, 255, 255));
        mudar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetocomunicacao/resources/toqueicon90.png"))); // NOI18N

        javax.swing.GroupLayout toque_panelLayout = new javax.swing.GroupLayout(toque_panel);
        toque_panel.setLayout(toque_panelLayout);
        toque_panelLayout.setHorizontalGroup(
            toque_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(toque_panelLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jogadas)
                .addContainerGap(32, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, toque_panelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(mudar)
                .addGap(147, 147, 147))
        );
        toque_panelLayout.setVerticalGroup(
            toque_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(toque_panelLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jogadas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mudar, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        ToqueDialog.getContentPane().add(toque_panel);
        toque_panel.setBounds(0, 0, 400, 175);

        toque_background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetocomunicacao/resources/woodenBackgroundSmall.png"))); // NOI18N
        ToqueDialog.getContentPane().add(toque_background);
        toque_background.setBounds(0, 1, 400, 175);

        LoserDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        LoserDialog.setTitle("Derrota");
        LoserDialog.setMinimumSize(new java.awt.Dimension(400, 175));
        LoserDialog.setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        LoserDialog.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        LoserDialog.setResizable(false);
        LoserDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                LoserDialogWindowActivated(evt);
            }
        });
        LoserDialog.getContentPane().setLayout(null);

        loser_panel.setMinimumSize(new java.awt.Dimension(400, 175));
        loser_panel.setOpaque(false);

        derrota.setFont(new java.awt.Font("Verdana", 0, 24));
        derrota.setForeground(new java.awt.Color(255, 0, 0));
        derrota.setText("Derrota!");

        duplaperdedora.setFont(new java.awt.Font("Verdana", 0, 22));
        duplaperdedora.setForeground(new java.awt.Color(255, 255, 255));
        duplaperdedora.setText("Sua dupla perdeu");

        rodadaperdida.setFont(new java.awt.Font("Verdana", 0, 22));
        rodadaperdida.setForeground(new java.awt.Color(255, 255, 255));
        rodadaperdida.setText("essa rodada. Boa");

        jLabel1.setFont(new java.awt.Font("Verdana", 0, 22));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("sorte na próxima!");

        javax.swing.GroupLayout loser_panelLayout = new javax.swing.GroupLayout(loser_panel);
        loser_panel.setLayout(loser_panelLayout);
        loser_panelLayout.setHorizontalGroup(
            loser_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loser_panelLayout.createSequentialGroup()
                .addGap(106, 106, 106)
                .addGroup(loser_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(duplaperdedora)
                    .addComponent(rodadaperdida)
                    .addGroup(loser_panelLayout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(derrota)))
                .addContainerGap(98, Short.MAX_VALUE))
        );
        loser_panelLayout.setVerticalGroup(
            loser_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loser_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(derrota)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(duplaperdedora)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rodadaperdida)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        LoserDialog.getContentPane().add(loser_panel);
        loser_panel.setBounds(0, 0, 400, 175);

        loser_background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetocomunicacao/resources/woodenBackgroundSmall.png"))); // NOI18N
        LoserDialog.getContentPane().add(loser_background);
        loser_background.setBounds(0, 5, 400, 175);

        ContagemVitoriaDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        ContagemVitoriaDialog.setTitle("Vitória na contagem!");
        ContagemVitoriaDialog.setLocationByPlatform(true);
        ContagemVitoriaDialog.setMinimumSize(new java.awt.Dimension(400, 175));
        ContagemVitoriaDialog.setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        ContagemVitoriaDialog.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        ContagemVitoriaDialog.setResizable(false);
        ContagemVitoriaDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                ContagemVitoriaDialogWindowActivated(evt);
            }
        });
        ContagemVitoriaDialog.getContentPane().setLayout(null);

        win_count_panel.setMinimumSize(new java.awt.Dimension(400, 175));
        win_count_panel.setOpaque(false);

        winner_count_icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetocomunicacao/resources/draw_victory128.png"))); // NOI18N

        win_count.setFont(new java.awt.Font("Verdana", 0, 24));
        win_count.setForeground(new java.awt.Color(0, 153, 0));
        win_count.setText("Vitória na contagem!");

        dupla1contagemv.setFont(new java.awt.Font("Verdana", 0, 22));
        dupla1contagemv.setForeground(new java.awt.Color(255, 255, 255));
        dupla1contagemv.setText("Pontos Dupla 1:");

        dupla2contagemv.setFont(new java.awt.Font("Verdana", 0, 22));
        dupla2contagemv.setForeground(new java.awt.Color(255, 255, 255));
        dupla2contagemv.setText("Pontos Dupla 2:");

        label_pontosdupla1v.setFont(new java.awt.Font("Verdana", 0, 18));
        label_pontosdupla1v.setForeground(new java.awt.Color(255, 255, 255));
        label_pontosdupla1v.setText("pt1");

        label_pontosdupla2v.setFont(new java.awt.Font("Verdana", 0, 18));
        label_pontosdupla2v.setForeground(new java.awt.Color(255, 255, 255));
        label_pontosdupla2v.setText("pt2");

        javax.swing.GroupLayout win_count_panelLayout = new javax.swing.GroupLayout(win_count_panel);
        win_count_panel.setLayout(win_count_panelLayout);
        win_count_panelLayout.setHorizontalGroup(
            win_count_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(win_count_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(winner_count_icon)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(win_count_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(win_count_panelLayout.createSequentialGroup()
                        .addComponent(dupla2contagemv)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label_pontosdupla2v))
                    .addGroup(win_count_panelLayout.createSequentialGroup()
                        .addComponent(dupla1contagemv)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label_pontosdupla1v))
                    .addComponent(win_count))
                .addGap(8, 8, 8))
        );
        win_count_panelLayout.setVerticalGroup(
            win_count_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(win_count_panelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(win_count_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(winner_count_icon)
                    .addGroup(win_count_panelLayout.createSequentialGroup()
                        .addComponent(win_count)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(win_count_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dupla1contagemv)
                            .addComponent(label_pontosdupla1v))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(win_count_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dupla2contagemv)
                            .addComponent(label_pontosdupla2v))))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        ContagemVitoriaDialog.getContentPane().add(win_count_panel);
        win_count_panel.setBounds(0, 0, 400, 175);

        winner_count_background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetocomunicacao/resources/woodenBackgroundSmall.png"))); // NOI18N
        ContagemVitoriaDialog.getContentPane().add(winner_count_background);
        winner_count_background.setBounds(0, 1, 400, 175);

        ContagemDerrotaDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        ContagemDerrotaDialog.setTitle("Derrota na contagem!");
        ContagemDerrotaDialog.setLocationByPlatform(true);
        ContagemDerrotaDialog.setMinimumSize(new java.awt.Dimension(400, 175));
        ContagemDerrotaDialog.setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        ContagemDerrotaDialog.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        ContagemDerrotaDialog.setResizable(false);
        ContagemDerrotaDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                ContagemDerrotaDialogWindowActivated(evt);
            }
        });
        ContagemDerrotaDialog.getContentPane().setLayout(null);

        lose_count_panel.setMinimumSize(new java.awt.Dimension(400, 175));
        lose_count_panel.setOpaque(false);
        lose_count_panel.setLayout(null);

        loser_count_icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetocomunicacao/resources/draw_lose128.png"))); // NOI18N
        lose_count_panel.add(loser_count_icon);
        loser_count_icon.setBounds(0, 20, 110, 128);

        derrota_count.setFont(new java.awt.Font("Verdana", 0, 24));
        derrota_count.setForeground(new java.awt.Color(255, 0, 0));
        derrota_count.setText("Derrota na contagem!");
        lose_count_panel.add(derrota_count);
        derrota_count.setBounds(120, 30, 263, 30);

        dupla1contagemd.setFont(new java.awt.Font("Verdana", 0, 22));
        dupla1contagemd.setForeground(new java.awt.Color(255, 255, 255));
        dupla1contagemd.setText("Pontos Dupla 1:");
        lose_count_panel.add(dupla1contagemd);
        dupla1contagemd.setBounds(144, 59, 177, 28);

        dupla2contagemd.setFont(new java.awt.Font("Verdana", 0, 22));
        dupla2contagemd.setForeground(new java.awt.Color(255, 255, 255));
        dupla2contagemd.setText("Pontos Dupla 2:");
        lose_count_panel.add(dupla2contagemd);
        dupla2contagemd.setBounds(144, 98, 177, 28);

        label_pontosdupla1d.setFont(new java.awt.Font("Verdana", 0, 18));
        label_pontosdupla1d.setForeground(new java.awt.Color(255, 255, 255));
        label_pontosdupla1d.setText("pt1");
        lose_count_panel.add(label_pontosdupla1d);
        label_pontosdupla1d.setBounds(327, 63, 29, 23);

        label_pontosdupla2d.setFont(new java.awt.Font("Verdana", 0, 18));
        label_pontosdupla2d.setForeground(new java.awt.Color(255, 255, 255));
        label_pontosdupla2d.setText("pt2");
        lose_count_panel.add(label_pontosdupla2d);
        label_pontosdupla2d.setBounds(327, 102, 29, 23);

        ContagemDerrotaDialog.getContentPane().add(lose_count_panel);
        lose_count_panel.setBounds(0, 0, 400, 175);

        loser_count_background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetocomunicacao/resources/woodenBackgroundSmall.png"))); // NOI18N
        ContagemDerrotaDialog.getContentPane().add(loser_count_background);
        loser_count_background.setBounds(0, 1, 400, 175);

        DisconnectDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        DisconnectDialog.setTitle("Jogador desconectado");
        DisconnectDialog.setMinimumSize(new java.awt.Dimension(400, 175));
        DisconnectDialog.setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        DisconnectDialog.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        DisconnectDialog.setResizable(false);
        DisconnectDialog.getContentPane().setLayout(null);

        disconnect_panel.setMinimumSize(new java.awt.Dimension(400, 175));
        disconnect_panel.setOpaque(false);
        disconnect_panel.setLayout(null);

        jogador_desconectado.setFont(new java.awt.Font("Verdana", 0, 24));
        jogador_desconectado.setForeground(new java.awt.Color(255, 0, 0));
        jogador_desconectado.setText("Jogador(es) Desconetado(s)!");
        disconnect_panel.add(jogador_desconectado);
        jogador_desconectado.setBounds(20, 10, 360, 30);

        exit_disconnect.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetocomunicacao/resources/door32.png"))); // NOI18N
        exit_disconnect.setBorder(null);
        exit_disconnect.setBorderPainted(false);
        exit_disconnect.setContentAreaFilled(false);
        exit_disconnect.setFocusPainted(false);
        exit_disconnect.setFocusable(false);
        exit_disconnect.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/projetocomunicacao/resources/dooropen32.png"))); // NOI18N
        exit_disconnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exit_disconnectActionPerformed(evt);
            }
        });
        disconnect_panel.add(exit_disconnect);
        exit_disconnect.setBounds(360, 110, 32, 32);

        espere.setFont(new java.awt.Font("Verdana", 0, 18));
        espere.setForeground(new java.awt.Color(255, 255, 255));
        espere.setText("ou saia do jogo.");
        disconnect_panel.add(espere);
        espere.setBounds(120, 70, 200, 23);

        disconnect_icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetocomunicacao/resources/Disconnect_internet.png"))); // NOI18N
        disconnect_panel.add(disconnect_icon);
        disconnect_icon.setBounds(20, 50, 80, 80);

        espere1.setFont(new java.awt.Font("Verdana", 0, 18));
        espere1.setForeground(new java.awt.Color(255, 255, 255));
        espere1.setText("Espere por reconexão");
        disconnect_panel.add(espere1);
        espere1.setBounds(120, 50, 200, 23);

        DisconnectDialog.getContentPane().add(disconnect_panel);
        disconnect_panel.setBounds(0, 0, 400, 175);

        disconnect_background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetocomunicacao/resources/woodenBackgroundSmall.png"))); // NOI18N
        DisconnectDialog.getContentPane().add(disconnect_background);
        disconnect_background.setBounds(0, 1, 400, 175);

        CloseDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        CloseDialog.setTitle("Aplicativo finalizado");
        CloseDialog.setLocationByPlatform(true);
        CloseDialog.setMinimumSize(new java.awt.Dimension(400, 175));
        CloseDialog.setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        CloseDialog.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        CloseDialog.setResizable(false);
        CloseDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                CloseDialogWindowActivated(evt);
            }
        });
        CloseDialog.getContentPane().setLayout(null);

        close_panel.setMinimumSize(new java.awt.Dimension(400, 175));
        close_panel.setOpaque(false);
        close_panel.setLayout(null);

        alert_label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetocomunicacao/resources/alert64.png"))); // NOI18N
        close_panel.add(alert_label);
        alert_label.setBounds(30, 20, 128, 128);

        closed.setFont(new java.awt.Font("Verdana", 0, 24));
        closed.setForeground(new java.awt.Color(255, 0, 0));
        closed.setText("Algum jogador fechou o app!");
        close_panel.add(closed);
        closed.setBounds(30, 10, 350, 30);

        sendo.setFont(new java.awt.Font("Verdana", 0, 22));
        sendo.setForeground(new java.awt.Color(255, 255, 255));
        sendo.setText("O jogo está sendo");
        close_panel.add(sendo);
        sendo.setBounds(150, 50, 200, 28);

        finalizado.setFont(new java.awt.Font("Verdana", 0, 22));
        finalizado.setForeground(new java.awt.Color(255, 255, 255));
        finalizado.setText("finalizado.");
        close_panel.add(finalizado);
        finalizado.setBounds(150, 80, 140, 28);

        sair_button.setText("Sair");
        sair_button.setToolTipText("");
        sair_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sair_buttonActionPerformed(evt);
            }
        });
        close_panel.add(sair_button);
        sair_button.setBounds(300, 110, 73, 23);

        CloseDialog.getContentPane().add(close_panel);
        close_panel.setBounds(0, 0, 400, 175);

        close_background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetocomunicacao/resources/woodenBackgroundSmall.png"))); // NOI18N
        CloseDialog.getContentPane().add(close_background);
        close_background.setBounds(0, 1, 400, 175);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Domino Mania");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setIconImages(null);
        setName("game_frame"); // NOI18N
        setResizable(false);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
                formWindowLostFocus(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowDeiconified(java.awt.event.WindowEvent evt) {
                formWindowDeiconified(evt);
            }
            public void windowIconified(java.awt.event.WindowEvent evt) {
                formWindowIconified(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        game_panel.setAutoscrolls(true);
        game_panel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        game_panel.setEnabled(false);
        game_panel.setMaximumSize(new java.awt.Dimension(800, 600));
        game_panel.setMinimumSize(new java.awt.Dimension(800, 600));
        game_panel.setOpaque(false);
        game_panel.setLayout(null);

        ExitGameButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetocomunicacao/resources/door32.png"))); // NOI18N
        ExitGameButton.setAlignmentY(0.0F);
        ExitGameButton.setBorderPainted(false);
        ExitGameButton.setContentAreaFilled(false);
        ExitGameButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        ExitGameButton.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        ExitGameButton.setFocusable(false);
        ExitGameButton.setMaximumSize(new java.awt.Dimension(24, 40));
        ExitGameButton.setMinimumSize(new java.awt.Dimension(24, 40));
        ExitGameButton.setPreferredSize(new java.awt.Dimension(24, 40));
        ExitGameButton.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/projetocomunicacao/resources/dooropen32.png"))); // NOI18N
        ExitGameButton.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/projetocomunicacao/resources/dooropen32.png"))); // NOI18N
        ExitGameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitGameButtonActionPerformed(evt);
            }
        });
        game_panel.add(ExitGameButton);
        ExitGameButton.setBounds(10, 11, 24, 40);

        peca1jogador4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetocomunicacao/resources/pvirada.png"))); // NOI18N
        peca1jogador4.setBorderPainted(false);
        peca1jogador4.setContentAreaFilled(false);
        peca1jogador4.setDefaultCapable(false);
        peca1jogador4.setFocusPainted(false);
        peca1jogador4.setFocusable(false);
        peca1jogador4.setMaximumSize(new java.awt.Dimension(70, 35));
        peca1jogador4.setMinimumSize(new java.awt.Dimension(70, 35));
        peca1jogador4.setPreferredSize(new java.awt.Dimension(70, 35));
        game_panel.add(peca1jogador4);
        peca1jogador4.setBounds(9, 187, 70, 35);

        peca2jogador4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetocomunicacao/resources/pvirada.png"))); // NOI18N
        peca2jogador4.setBorderPainted(false);
        peca2jogador4.setContentAreaFilled(false);
        peca2jogador4.setDefaultCapable(false);
        peca2jogador4.setFocusPainted(false);
        peca2jogador4.setFocusable(false);
        peca2jogador4.setMaximumSize(new java.awt.Dimension(70, 35));
        peca2jogador4.setMinimumSize(new java.awt.Dimension(70, 35));
        peca2jogador4.setPreferredSize(new java.awt.Dimension(70, 35));
        game_panel.add(peca2jogador4);
        peca2jogador4.setBounds(9, 228, 70, 35);

        peca3jogador4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetocomunicacao/resources/pvirada.png"))); // NOI18N
        peca3jogador4.setBorderPainted(false);
        peca3jogador4.setContentAreaFilled(false);
        peca3jogador4.setDefaultCapable(false);
        peca3jogador4.setFocusPainted(false);
        peca3jogador4.setFocusable(false);
        peca3jogador4.setMaximumSize(new java.awt.Dimension(70, 35));
        peca3jogador4.setMinimumSize(new java.awt.Dimension(70, 35));
        peca3jogador4.setPreferredSize(new java.awt.Dimension(70, 35));
        game_panel.add(peca3jogador4);
        peca3jogador4.setBounds(9, 269, 70, 35);

        peca4jogador4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetocomunicacao/resources/pvirada.png"))); // NOI18N
        peca4jogador4.setBorderPainted(false);
        peca4jogador4.setContentAreaFilled(false);
        peca4jogador4.setDefaultCapable(false);
        peca4jogador4.setFocusPainted(false);
        peca4jogador4.setFocusable(false);
        peca4jogador4.setMaximumSize(new java.awt.Dimension(70, 35));
        peca4jogador4.setMinimumSize(new java.awt.Dimension(70, 35));
        peca4jogador4.setPreferredSize(new java.awt.Dimension(70, 35));
        game_panel.add(peca4jogador4);
        peca4jogador4.setBounds(9, 310, 70, 35);

        peca5jogador4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetocomunicacao/resources/pvirada.png"))); // NOI18N
        peca5jogador4.setBorderPainted(false);
        peca5jogador4.setContentAreaFilled(false);
        peca5jogador4.setFocusPainted(false);
        peca5jogador4.setFocusable(false);
        peca5jogador4.setMaximumSize(new java.awt.Dimension(70, 35));
        peca5jogador4.setMinimumSize(new java.awt.Dimension(70, 35));
        peca5jogador4.setPreferredSize(new java.awt.Dimension(70, 35));
        game_panel.add(peca5jogador4);
        peca5jogador4.setBounds(9, 351, 70, 35);

        peca6jogador4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetocomunicacao/resources/pvirada.png"))); // NOI18N
        peca6jogador4.setBorderPainted(false);
        peca6jogador4.setContentAreaFilled(false);
        peca6jogador4.setDefaultCapable(false);
        peca6jogador4.setFocusable(false);
        peca6jogador4.setMaximumSize(new java.awt.Dimension(70, 35));
        peca6jogador4.setMinimumSize(new java.awt.Dimension(70, 35));
        peca6jogador4.setPreferredSize(new java.awt.Dimension(70, 35));
        game_panel.add(peca6jogador4);
        peca6jogador4.setBounds(9, 392, 70, 35);

        peca1jogador3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetocomunicacao/resources/p53.png"))); // NOI18N
        peca1jogador3.setBorderPainted(false);
        peca1jogador3.setContentAreaFilled(false);
        peca1jogador3.setDefaultCapable(false);
        peca1jogador3.setFocusPainted(false);
        peca1jogador3.setFocusable(false);
        peca1jogador3.setMaximumSize(new java.awt.Dimension(35, 70));
        peca1jogador3.setMinimumSize(new java.awt.Dimension(35, 70));
        peca1jogador3.setPreferredSize(new java.awt.Dimension(35, 70));
        peca1jogador3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                peca1jogador3MouseReleased(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                peca1jogador3MousePressed(evt);
            }
        });
        peca1jogador3.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                peca1jogador3MouseDragged(evt);
            }
        });
        game_panel.add(peca1jogador3);
        peca1jogador3.setBounds(296, 509, 35, 70);

        peca2jogador3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetocomunicacao/resources/p66.png"))); // NOI18N
        peca2jogador3.setBorderPainted(false);
        peca2jogador3.setContentAreaFilled(false);
        peca2jogador3.setDefaultCapable(false);
        peca2jogador3.setFocusPainted(false);
        peca2jogador3.setFocusable(false);
        peca2jogador3.setMaximumSize(new java.awt.Dimension(35, 70));
        peca2jogador3.setMinimumSize(new java.awt.Dimension(35, 70));
        peca2jogador3.setPreferredSize(new java.awt.Dimension(35, 70));
        peca2jogador3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                peca2jogador3MouseReleased(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                peca2jogador3MousePressed(evt);
            }
        });
        peca2jogador3.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                peca2jogador3MouseDragged(evt);
            }
        });
        game_panel.add(peca2jogador3);
        peca2jogador3.setBounds(337, 509, 35, 70);

        peca3jogador3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetocomunicacao/resources/p22.png"))); // NOI18N
        peca3jogador3.setBorderPainted(false);
        peca3jogador3.setContentAreaFilled(false);
        peca3jogador3.setDefaultCapable(false);
        peca3jogador3.setFocusPainted(false);
        peca3jogador3.setFocusable(false);
        peca3jogador3.setMaximumSize(new java.awt.Dimension(35, 70));
        peca3jogador3.setMinimumSize(new java.awt.Dimension(35, 70));
        peca3jogador3.setPreferredSize(new java.awt.Dimension(35, 70));
        peca3jogador3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                peca3jogador3MouseReleased(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                peca3jogador3MousePressed(evt);
            }
        });
        peca3jogador3.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                peca3jogador3MouseDragged(evt);
            }
        });
        game_panel.add(peca3jogador3);
        peca3jogador3.setBounds(378, 509, 35, 70);

        peca4jogador3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetocomunicacao/resources/p50.png"))); // NOI18N
        peca4jogador3.setBorderPainted(false);
        peca4jogador3.setContentAreaFilled(false);
        peca4jogador3.setDefaultCapable(false);
        peca4jogador3.setFocusPainted(false);
        peca4jogador3.setMaximumSize(new java.awt.Dimension(35, 70));
        peca4jogador3.setMinimumSize(new java.awt.Dimension(35, 70));
        peca4jogador3.setPreferredSize(new java.awt.Dimension(35, 70));
        peca4jogador3.setRolloverEnabled(false);
        peca4jogador3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                peca4jogador3MouseReleased(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                peca4jogador3MousePressed(evt);
            }
        });
        peca4jogador3.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                peca4jogador3MouseDragged(evt);
            }
        });
        game_panel.add(peca4jogador3);
        peca4jogador3.setBounds(419, 509, 35, 70);

        peca5jogador3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetocomunicacao/resources/p00.png"))); // NOI18N
        peca5jogador3.setBorderPainted(false);
        peca5jogador3.setContentAreaFilled(false);
        peca5jogador3.setDefaultCapable(false);
        peca5jogador3.setFocusPainted(false);
        peca5jogador3.setMaximumSize(new java.awt.Dimension(35, 70));
        peca5jogador3.setMinimumSize(new java.awt.Dimension(35, 70));
        peca5jogador3.setPreferredSize(new java.awt.Dimension(35, 70));
        peca5jogador3.setRolloverEnabled(false);
        peca5jogador3.setVerifyInputWhenFocusTarget(false);
        peca5jogador3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                peca5jogador3MouseReleased(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                peca5jogador3MousePressed(evt);
            }
        });
        peca5jogador3.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                peca5jogador3MouseDragged(evt);
            }
        });
        game_panel.add(peca5jogador3);
        peca5jogador3.setBounds(460, 509, 35, 70);

        peca6jogador3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetocomunicacao/resources/p10.png"))); // NOI18N
        peca6jogador3.setBorderPainted(false);
        peca6jogador3.setContentAreaFilled(false);
        peca6jogador3.setDefaultCapable(false);
        peca6jogador3.setFocusPainted(false);
        peca6jogador3.setFocusable(false);
        peca6jogador3.setMaximumSize(new java.awt.Dimension(35, 70));
        peca6jogador3.setMinimumSize(new java.awt.Dimension(35, 70));
        peca6jogador3.setPreferredSize(new java.awt.Dimension(35, 70));
        peca6jogador3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                peca6jogador3MouseReleased(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                peca6jogador3MousePressed(evt);
            }
        });
        peca6jogador3.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                peca6jogador3MouseDragged(evt);
            }
        });
        game_panel.add(peca6jogador3);
        peca6jogador3.setBounds(501, 509, 35, 70);

        peca1jogador2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetocomunicacao/resources/pvirada.png"))); // NOI18N
        peca1jogador2.setBorderPainted(false);
        peca1jogador2.setContentAreaFilled(false);
        peca1jogador2.setDefaultCapable(false);
        peca1jogador2.setFocusPainted(false);
        peca1jogador2.setFocusable(false);
        peca1jogador2.setMaximumSize(new java.awt.Dimension(70, 35));
        peca1jogador2.setMinimumSize(new java.awt.Dimension(70, 35));
        peca1jogador2.setPreferredSize(new java.awt.Dimension(70, 35));
        game_panel.add(peca1jogador2);
        peca1jogador2.setBounds(720, 187, 70, 35);

        peca2jogador2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetocomunicacao/resources/pvirada.png"))); // NOI18N
        peca2jogador2.setBorderPainted(false);
        peca2jogador2.setContentAreaFilled(false);
        peca2jogador2.setDefaultCapable(false);
        peca2jogador2.setFocusPainted(false);
        peca2jogador2.setFocusable(false);
        peca2jogador2.setMaximumSize(new java.awt.Dimension(70, 35));
        peca2jogador2.setMinimumSize(new java.awt.Dimension(70, 35));
        peca2jogador2.setPreferredSize(new java.awt.Dimension(70, 35));
        game_panel.add(peca2jogador2);
        peca2jogador2.setBounds(720, 230, 70, 35);

        peca3jogador2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetocomunicacao/resources/pvirada.png"))); // NOI18N
        peca3jogador2.setBorderPainted(false);
        peca3jogador2.setContentAreaFilled(false);
        peca3jogador2.setDefaultCapable(false);
        peca3jogador2.setFocusPainted(false);
        peca3jogador2.setFocusable(false);
        peca3jogador2.setMaximumSize(new java.awt.Dimension(70, 35));
        peca3jogador2.setMinimumSize(new java.awt.Dimension(70, 35));
        peca3jogador2.setPreferredSize(new java.awt.Dimension(70, 35));
        game_panel.add(peca3jogador2);
        peca3jogador2.setBounds(720, 270, 70, 35);

        peca4jogador2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetocomunicacao/resources/pvirada.png"))); // NOI18N
        peca4jogador2.setBorderPainted(false);
        peca4jogador2.setContentAreaFilled(false);
        peca4jogador2.setFocusPainted(false);
        peca4jogador2.setFocusable(false);
        peca4jogador2.setMaximumSize(new java.awt.Dimension(70, 35));
        peca4jogador2.setMinimumSize(new java.awt.Dimension(70, 35));
        peca4jogador2.setPreferredSize(new java.awt.Dimension(70, 35));
        game_panel.add(peca4jogador2);
        peca4jogador2.setBounds(720, 310, 70, 35);

        peca5jogador2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetocomunicacao/resources/pvirada.png"))); // NOI18N
        peca5jogador2.setBorderPainted(false);
        peca5jogador2.setContentAreaFilled(false);
        peca5jogador2.setDefaultCapable(false);
        peca5jogador2.setFocusable(false);
        peca5jogador2.setMaximumSize(new java.awt.Dimension(70, 35));
        peca5jogador2.setMinimumSize(new java.awt.Dimension(70, 35));
        peca5jogador2.setPreferredSize(new java.awt.Dimension(70, 35));
        game_panel.add(peca5jogador2);
        peca5jogador2.setBounds(720, 350, 70, 35);

        peca6jogador2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetocomunicacao/resources/pvirada.png"))); // NOI18N
        peca6jogador2.setBorderPainted(false);
        peca6jogador2.setContentAreaFilled(false);
        peca6jogador2.setDefaultCapable(false);
        peca6jogador2.setFocusPainted(false);
        peca6jogador2.setFocusable(false);
        peca6jogador2.setMaximumSize(new java.awt.Dimension(70, 35));
        peca6jogador2.setMinimumSize(new java.awt.Dimension(70, 35));
        peca6jogador2.setPreferredSize(new java.awt.Dimension(70, 35));
        game_panel.add(peca6jogador2);
        peca6jogador2.setBounds(720, 390, 70, 35);

        peca1jogador1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetocomunicacao/resources/pviradav.png"))); // NOI18N
        peca1jogador1.setBorderPainted(false);
        peca1jogador1.setContentAreaFilled(false);
        peca1jogador1.setDefaultCapable(false);
        peca1jogador1.setFocusPainted(false);
        peca1jogador1.setFocusable(false);
        peca1jogador1.setMaximumSize(new java.awt.Dimension(35, 70));
        peca1jogador1.setMinimumSize(new java.awt.Dimension(35, 70));
        peca1jogador1.setPreferredSize(new java.awt.Dimension(35, 70));
        game_panel.add(peca1jogador1);
        peca1jogador1.setBounds(296, 21, 35, 70);

        peca2jogador1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetocomunicacao/resources/pviradav.png"))); // NOI18N
        peca2jogador1.setBorderPainted(false);
        peca2jogador1.setContentAreaFilled(false);
        peca2jogador1.setDefaultCapable(false);
        peca2jogador1.setFocusPainted(false);
        peca2jogador1.setFocusable(false);
        peca2jogador1.setMaximumSize(new java.awt.Dimension(35, 70));
        peca2jogador1.setMinimumSize(new java.awt.Dimension(35, 70));
        peca2jogador1.setPreferredSize(new java.awt.Dimension(35, 70));
        peca2jogador1.setRequestFocusEnabled(false);
        game_panel.add(peca2jogador1);
        peca2jogador1.setBounds(337, 21, 35, 70);

        peca3jogador1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetocomunicacao/resources/pviradav.png"))); // NOI18N
        peca3jogador1.setBorderPainted(false);
        peca3jogador1.setContentAreaFilled(false);
        peca3jogador1.setDefaultCapable(false);
        peca3jogador1.setFocusPainted(false);
        peca3jogador1.setFocusable(false);
        peca3jogador1.setMaximumSize(new java.awt.Dimension(35, 70));
        peca3jogador1.setMinimumSize(new java.awt.Dimension(35, 70));
        peca3jogador1.setPreferredSize(new java.awt.Dimension(35, 70));
        game_panel.add(peca3jogador1);
        peca3jogador1.setBounds(378, 21, 35, 70);

        peca4jogador1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetocomunicacao/resources/pviradav.png"))); // NOI18N
        peca4jogador1.setBorderPainted(false);
        peca4jogador1.setContentAreaFilled(false);
        peca4jogador1.setDefaultCapable(false);
        peca4jogador1.setFocusPainted(false);
        peca4jogador1.setFocusable(false);
        peca4jogador1.setMaximumSize(new java.awt.Dimension(35, 70));
        peca4jogador1.setMinimumSize(new java.awt.Dimension(35, 70));
        peca4jogador1.setPreferredSize(new java.awt.Dimension(35, 70));
        peca4jogador1.setRolloverEnabled(false);
        game_panel.add(peca4jogador1);
        peca4jogador1.setBounds(419, 21, 35, 70);

        peca5jogador1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetocomunicacao/resources/pviradav.png"))); // NOI18N
        peca5jogador1.setBorderPainted(false);
        peca5jogador1.setContentAreaFilled(false);
        peca5jogador1.setDefaultCapable(false);
        peca5jogador1.setFocusPainted(false);
        peca5jogador1.setMaximumSize(new java.awt.Dimension(35, 70));
        peca5jogador1.setMinimumSize(new java.awt.Dimension(35, 70));
        game_panel.add(peca5jogador1);
        peca5jogador1.setBounds(460, 21, 35, 70);

        peca6jogador1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetocomunicacao/resources/pviradav.png"))); // NOI18N
        peca6jogador1.setBorderPainted(false);
        peca6jogador1.setContentAreaFilled(false);
        peca6jogador1.setDefaultCapable(false);
        peca6jogador1.setFocusPainted(false);
        peca6jogador1.setFocusable(false);
        peca6jogador1.setMaximumSize(new java.awt.Dimension(35, 70));
        peca6jogador1.setMinimumSize(new java.awt.Dimension(35, 70));
        peca6jogador1.setPreferredSize(new java.awt.Dimension(35, 70));
        game_panel.add(peca6jogador1);
        peca6jogador1.setBounds(501, 21, 35, 70);

        NomeJogador1.setFont(new java.awt.Font("Verdana", 1, 12));
        NomeJogador1.setForeground(new java.awt.Color(255, 255, 255));
        NomeJogador1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetocomunicacao/resources/greenball16.png"))); // NOI18N
        NomeJogador1.setText("Pedro");
        NomeJogador1.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/projetocomunicacao/resources/redball16.png"))); // NOI18N
        NomeJogador1.setFocusable(false);
        NomeJogador1.setRequestFocusEnabled(false);
        NomeJogador1.setVerifyInputWhenFocusTarget(false);
        game_panel.add(NomeJogador1);
        NomeJogador1.setBounds(554, 21, 100, 16);

        DuplaJogador1.setFont(new java.awt.Font("Verdana", 1, 12));
        DuplaJogador1.setForeground(new java.awt.Color(255, 255, 255));
        DuplaJogador1.setText("Dupla 1");
        DuplaJogador1.setFocusable(false);
        DuplaJogador1.setRequestFocusEnabled(false);
        DuplaJogador1.setVerifyInputWhenFocusTarget(false);
        game_panel.add(DuplaJogador1);
        DuplaJogador1.setBounds(554, 43, 51, 16);

        NomeJogador2.setFont(new java.awt.Font("Verdana", 1, 12));
        NomeJogador2.setForeground(new java.awt.Color(255, 255, 255));
        NomeJogador2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetocomunicacao/resources/greenball16.png"))); // NOI18N
        NomeJogador2.setText("Aquitério");
        NomeJogador2.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/projetocomunicacao/resources/redball16.png"))); // NOI18N
        NomeJogador2.setFocusable(false);
        NomeJogador2.setRequestFocusEnabled(false);
        NomeJogador2.setVerifyInputWhenFocusTarget(false);
        game_panel.add(NomeJogador2);
        NomeJogador2.setBounds(710, 105, 80, 16);

        DuplaJogador2.setFont(new java.awt.Font("Verdana", 1, 12));
        DuplaJogador2.setForeground(new java.awt.Color(255, 255, 255));
        DuplaJogador2.setText("Dupla 2");
        DuplaJogador2.setFocusable(false);
        DuplaJogador2.setRequestFocusEnabled(false);
        DuplaJogador2.setVerifyInputWhenFocusTarget(false);
        game_panel.add(DuplaJogador2);
        DuplaJogador2.setBounds(710, 127, 51, 16);

        NomeJogador3.setFont(new java.awt.Font("Verdana", 1, 12));
        NomeJogador3.setForeground(new java.awt.Color(255, 255, 255));
        NomeJogador3.setText("Vini");
        NomeJogador3.setFocusable(false);
        NomeJogador3.setRequestFocusEnabled(false);
        NomeJogador3.setVerifyInputWhenFocusTarget(false);
        game_panel.add(NomeJogador3);
        NomeJogador3.setBounds(554, 509, 120, 16);

        DuplaJogador3.setFont(new java.awt.Font("Verdana", 1, 12));
        DuplaJogador3.setForeground(new java.awt.Color(255, 255, 255));
        DuplaJogador3.setText("Dupla 1");
        DuplaJogador3.setToolTipText("");
        DuplaJogador3.setFocusable(false);
        DuplaJogador3.setRequestFocusEnabled(false);
        DuplaJogador3.setVerifyInputWhenFocusTarget(false);
        game_panel.add(DuplaJogador3);
        DuplaJogador3.setBounds(554, 531, 51, 16);

        NomeJogador4.setFont(new java.awt.Font("Verdana", 1, 12));
        NomeJogador4.setForeground(new java.awt.Color(255, 255, 255));
        NomeJogador4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetocomunicacao/resources/greenball16.png"))); // NOI18N
        NomeJogador4.setText("Jacilda");
        NomeJogador4.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/projetocomunicacao/resources/redball16.png"))); // NOI18N
        NomeJogador4.setFocusable(false);
        NomeJogador4.setRequestFocusEnabled(false);
        NomeJogador4.setVerifyInputWhenFocusTarget(false);
        game_panel.add(NomeJogador4);
        NomeJogador4.setBounds(9, 105, 80, 16);

        DuplaJogador4.setFont(new java.awt.Font("Verdana", 1, 12));
        DuplaJogador4.setForeground(new java.awt.Color(255, 255, 255));
        DuplaJogador4.setText("Dupla 2");
        DuplaJogador4.setFocusable(false);
        DuplaJogador4.setRequestFocusEnabled(false);
        DuplaJogador4.setVerifyInputWhenFocusTarget(false);
        game_panel.add(DuplaJogador4);
        DuplaJogador4.setBounds(22, 127, 51, 16);

        ScoreDupla1.setFont(new java.awt.Font("Verdana", 1, 12));
        ScoreDupla1.setForeground(new java.awt.Color(255, 0, 0));
        ScoreDupla1.setText("0");
        ScoreDupla1.setFocusable(false);
        ScoreDupla1.setRequestFocusEnabled(false);
        ScoreDupla1.setVerifyInputWhenFocusTarget(false);
        game_panel.add(ScoreDupla1);
        ScoreDupla1.setBounds(688, 52, 9, 16);

        ScoreDupla2.setFont(new java.awt.Font("Verdana", 1, 12));
        ScoreDupla2.setForeground(new java.awt.Color(46, 180, 243));
        ScoreDupla2.setText("0");
        ScoreDupla2.setFocusable(false);
        ScoreDupla2.setRequestFocusEnabled(false);
        ScoreDupla2.setVerifyInputWhenFocusTarget(false);
        game_panel.add(ScoreDupla2);
        ScoreDupla2.setBounds(762, 52, 9, 16);
        game_panel.add(posicao_0);
        posicao_0.setBounds(390, 260, 35, 70);
        game_panel.add(posicao_1r);
        posicao_1r.setBounds(390, 190, 35, 70);
        game_panel.add(posicao_2r);
        posicao_2r.setBounds(390, 120, 35, 70);
        game_panel.add(posicao_3r);
        posicao_3r.setBounds(426, 120, 70, 35);
        game_panel.add(posicao_4r);
        posicao_4r.setBounds(460, 155, 35, 70);
        game_panel.add(posicao_5r);
        posicao_5r.setBounds(460, 225, 35, 70);
        game_panel.add(posicao_6r);
        posicao_6r.setBounds(460, 295, 35, 70);
        game_panel.add(posicao_7r);
        posicao_7r.setBounds(460, 365, 35, 70);
        game_panel.add(posicao_8r);
        posicao_8r.setBounds(460, 435, 70, 35);
        game_panel.add(posicao_9r);
        posicao_9r.setBounds(530, 400, 35, 70);
        game_panel.add(posicao_10r);
        posicao_10r.setBounds(530, 330, 35, 70);
        game_panel.add(posicao_11r);
        posicao_11r.setBounds(530, 260, 35, 70);
        game_panel.add(posicao_12r);
        posicao_12r.setBounds(530, 190, 35, 70);
        game_panel.add(posicao_13r);
        posicao_13r.setBounds(530, 120, 35, 70);
        game_panel.add(posicao_14r);
        posicao_14r.setBounds(567, 120, 70, 35);
        game_panel.add(posicao_15r);
        posicao_15r.setBounds(602, 156, 35, 70);
        game_panel.add(posicao_16r);
        posicao_16r.setBounds(602, 227, 35, 70);
        game_panel.add(posicao_17r);
        posicao_17r.setBounds(602, 298, 35, 70);
        game_panel.add(posicao_18r);
        posicao_18r.setBounds(602, 368, 35, 70);
        game_panel.add(posicao_19r);
        posicao_19r.setBounds(602, 438, 70, 35);
        game_panel.add(posicao_20r);
        posicao_20r.setBounds(672, 403, 35, 70);
        game_panel.add(posicao_1l);
        posicao_1l.setBounds(390, 330, 35, 70);
        game_panel.add(posicao_2l);
        posicao_2l.setBounds(390, 400, 35, 70);
        game_panel.add(posicao_3l);
        posicao_3l.setBounds(320, 434, 70, 35);
        game_panel.add(posicao_4l);
        posicao_4l.setBounds(320, 364, 35, 70);
        game_panel.add(posicao_5l);
        posicao_5l.setBounds(320, 294, 35, 70);
        game_panel.add(posicao_6l);
        posicao_6l.setBounds(320, 224, 35, 70);
        game_panel.add(posicao_7l);
        posicao_7l.setBounds(320, 154, 35, 70);
        game_panel.add(posicao_8l);
        posicao_8l.setBounds(285, 118, 70, 35);
        game_panel.add(posicao_9l);
        posicao_9l.setBounds(249, 119, 35, 70);
        game_panel.add(posicao_10l);
        posicao_10l.setBounds(249, 189, 35, 70);
        game_panel.add(posicao_11l);
        posicao_11l.setBounds(249, 259, 35, 70);
        game_panel.add(posicao_12l);
        posicao_12l.setBounds(249, 329, 35, 70);
        game_panel.add(posicao_13l);
        posicao_13l.setBounds(249, 399, 35, 70);
        game_panel.add(posicao_14l);
        posicao_14l.setBounds(179, 434, 70, 35);
        game_panel.add(posicao_15l);
        posicao_15l.setBounds(180, 364, 35, 70);
        game_panel.add(posicao_16l);
        posicao_16l.setBounds(180, 294, 35, 70);
        game_panel.add(posicao_17l);
        posicao_17l.setBounds(180, 224, 35, 70);
        game_panel.add(posicao_18l);
        posicao_18l.setBounds(180, 154, 35, 70);
        game_panel.add(posicao_19l);
        posicao_19l.setBounds(145, 119, 70, 35);
        game_panel.add(posicao_20l);
        posicao_20l.setBounds(109, 119, 35, 70);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(game_panel, gridBagConstraints);

        Background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetocomunicacao/background/game_gui_background_logo.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(Background, gridBagConstraints);

        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private javax.swing.JLabel last_right() {
        javax.swing.JLabel last_piece_right = posicao_0;
        if (last_position_right == 0) {
            last_piece_right = posicao_0;
        } else if (last_position_right == 1) {
            last_piece_right = posicao_1r;
        } else if (last_position_right == 2) {
            last_piece_right = posicao_2r;
        } else if (last_position_right == 3) {
            last_piece_right = posicao_3r;
        } else if (last_position_right == 4) {
            last_piece_right = posicao_4r;
        } else if (last_position_right == 5) {
            last_piece_right = posicao_5r;
        } else if (last_position_right == 6) {
            last_piece_right = posicao_6r;
        } else if (last_position_right == 7) {
            last_piece_right = posicao_7r;
        } else if (last_position_right == 8) {
            last_piece_right = posicao_8r;
        } else if (last_position_right == 9) {
            last_piece_right = posicao_9r;
        } else if (last_position_right == 10) {
            last_piece_right = posicao_10r;
        } else if (last_position_right == 11) {
            last_piece_right = posicao_11r;
        } else if (last_position_right == 12) {
            last_piece_right = posicao_12r;
        } else if (last_position_right == 13) {
            last_piece_right = posicao_13r;
        } else if (last_position_right == 14) {
            last_piece_right = posicao_14r;
        } else if (last_position_right == 15) {
            last_piece_right = posicao_15r;
        } else if (last_position_right == 16) {
            last_piece_right = posicao_16r;
        } else if (last_position_right == 17) {
            last_piece_right = posicao_17r;
        } else if (last_position_right == 18) {
            last_piece_right = posicao_18r;
        } else if (last_position_right == 19) {
            last_piece_right = posicao_19r;
        } else if (last_position_right == 20) {
            last_piece_right = posicao_20r;
        }
        return last_piece_right;
    }

    private javax.swing.JLabel last_left() {
        javax.swing.JLabel last_piece_left = posicao_0;

        if (last_position_left == 0) {
            last_piece_left = posicao_0;
        } else if (last_position_left == -1) {
            last_piece_left = posicao_1l;
        } else if (last_position_left == -2) {
            last_piece_left = posicao_2l;
        } else if (last_position_left == -3) {
            last_piece_left = posicao_3l;
        } else if (last_position_left == -4) {
            last_piece_left = posicao_4l;
        } else if (last_position_left == -5) {
            last_piece_left = posicao_5l;
        } else if (last_position_left == -6) {
            last_piece_left = posicao_6l;
        } else if (last_position_left == -7) {
            last_piece_left = posicao_7l;
        } else if (last_position_left == -8) {
            last_piece_left = posicao_8l;
        } else if (last_position_left == -9) {
            last_piece_left = posicao_9l;
        } else if (last_position_left == -10) {
            last_piece_left = posicao_10l;
        } else if (last_position_left == -11) {
            last_piece_left = posicao_11l;
        } else if (last_position_left == -12) {
            last_piece_left = posicao_12l;
        } else if (last_position_left == -13) {
            last_piece_left = posicao_13l;
        } else if (last_position_left == -14) {
            last_piece_left = posicao_14l;
        } else if (last_position_left == -15) {
            last_piece_left = posicao_15l;
        } else if (last_position_left == -16) {
            last_piece_left = posicao_16l;
        } else if (last_position_left == -17) {
            last_piece_left = posicao_17l;
        } else if (last_position_left == -18) {
            last_piece_left = posicao_18l;
        } else if (last_position_left == -19) {
            last_piece_left = posicao_19l;
        } else if (last_position_left == -20) {
            last_piece_left = posicao_20l;
        }
        return last_piece_left;
    }
    
    private javax.swing.JLabel last_right_contour() {
        javax.swing.JLabel last_piece_right = posicao_0;
        if (last_position_right_contour == 0) {
            last_piece_right = posicao_0;
        } else if (last_position_right_contour == 1) {
            last_piece_right = posicao_1r;
        } else if (last_position_right_contour == 2) {
            last_piece_right = posicao_2r;
        } else if (last_position_right_contour == 3) {
            last_piece_right = posicao_3r;
        } else if (last_position_right_contour == 4) {
            last_piece_right = posicao_4r;
        } else if (last_position_right_contour == 5) {
            last_piece_right = posicao_5r;
        } else if (last_position_right_contour == 6) {
            last_piece_right = posicao_6r;
        } else if (last_position_right_contour == 7) {
            last_piece_right = posicao_7r;
        } else if (last_position_right_contour == 8) {
            last_piece_right = posicao_8r;
        } else if (last_position_right_contour == 9) {
            last_piece_right = posicao_9r;
        } else if (last_position_right_contour == 10) {
            last_piece_right = posicao_10r;
        } else if (last_position_right_contour == 11) {
            last_piece_right = posicao_11r;
        } else if (last_position_right_contour == 12) {
            last_piece_right = posicao_12r;
        } else if (last_position_right_contour == 13) {
            last_piece_right = posicao_13r;
        } else if (last_position_right_contour == 14) {
            last_piece_right = posicao_14r;
        } else if (last_position_right_contour == 15) {
            last_piece_right = posicao_15r;
        } else if (last_position_right_contour == 16) {
            last_piece_right = posicao_16r;
        } else if (last_position_right_contour == 17) {
            last_piece_right = posicao_17r;
        } else if (last_position_right_contour == 18) {
            last_piece_right = posicao_18r;
        } else if (last_position_right_contour == 19) {
            last_piece_right = posicao_19r;
        } else if (last_position_right_contour == 20) {
            last_piece_right = posicao_20r;
        }
        return last_piece_right;
    }
    
    private javax.swing.JLabel last_left_contour() {
        javax.swing.JLabel last_piece_left = posicao_0;

        if (last_position_left_contour == 0) {
            last_piece_left = posicao_0;
        } else if (last_position_left_contour == -1) {
            last_piece_left = posicao_1l;
        } else if (last_position_left_contour == -2) {
            last_piece_left = posicao_2l;
        } else if (last_position_left_contour == -3) {
            last_piece_left = posicao_3l;
        } else if (last_position_left_contour == -4) {
            last_piece_left = posicao_4l;
        } else if (last_position_left_contour == -5) {
            last_piece_left = posicao_5l;
        } else if (last_position_left_contour == -6) {
            last_piece_left = posicao_6l;
        } else if (last_position_left_contour == -7) {
            last_piece_left = posicao_7l;
        } else if (last_position_left_contour == -8) {
            last_piece_left = posicao_8l;
        } else if (last_position_left_contour == -9) {
            last_piece_left = posicao_9l;
        } else if (last_position_left_contour == -10) {
            last_piece_left = posicao_10l;
        } else if (last_position_left_contour == -11) {
            last_piece_left = posicao_11l;
        } else if (last_position_left_contour == -12) {
            last_piece_left = posicao_12l;
        } else if (last_position_left_contour == -13) {
            last_piece_left = posicao_13l;
        } else if (last_position_left_contour == -14) {
            last_piece_left = posicao_14l;
        } else if (last_position_left_contour == -15) {
            last_piece_left = posicao_15l;
        } else if (last_position_left_contour == -16) {
            last_piece_left = posicao_16l;
        } else if (last_position_left_contour == -17) {
            last_piece_left = posicao_17l;
        } else if (last_position_left_contour == -18) {
            last_piece_left = posicao_18l;
        } else if (last_position_left_contour == -19) {
            last_piece_left = posicao_19l;
        } else if (last_position_left_contour == -20) {
            last_piece_left = posicao_20l;
        }
        return last_piece_left;
    }
    
    public void setTurno(int turno) {
        this.turno = turno;
    }

    public int direcaoRight() {
        if (this.last_position_right == 0 || this.last_position_right == 1 || this.last_position_right == 2
                || this.last_position_right == 9 || this.last_position_right == 10
                || this.last_position_right == 11 || this.last_position_right == 12 || this.last_position_right == 13
                || this.last_position_right == 20) {
            return 1;
        }
        return 0;
    }

    public int direcaoLeft() {
        if (this.last_position_left == -1 || this.last_position_left == -2 || this.last_position_left == -9 || this.last_position_left == -10
                || this.last_position_left == -11 || this.last_position_left == -12 || this.last_position_left == -13 || this.last_position_left == -20) {
            return 0;
        }
        return 1;
    }

    public void mostraGanhou() {
        WinnerDialog.setLocationRelativeTo(game_panel);
	WinnerDialog.setModal(false);
        WinnerDialog.setVisible(true);
    }

    public void tiraGanhou() {
        WinnerDialog.setVisible(false);
        WinnerDialog.setModal(false);
    }

    public void mostraPerdeu() {
        LoserDialog.setLocationRelativeTo(game_panel);
	LoserDialog.setModal(false);
        LoserDialog.setVisible(true);   
    }

    public void tiraPerdeu() {
        LoserDialog.setVisible(false);
        LoserDialog.setModal(false);
    }

    public void resetBoard() {
        posicao_0.setIcon(null);
        posicao_1r.setIcon(null);
        posicao_2r.setIcon(null);
        posicao_3r.setIcon(null);
        posicao_4r.setIcon(null);
        posicao_5r.setIcon(null);
        posicao_6r.setIcon(null);
        posicao_7r.setIcon(null);
        posicao_8r.setIcon(null);
        posicao_9r.setIcon(null);
        posicao_10r.setIcon(null);
        posicao_11r.setIcon(null);
        posicao_12r.setIcon(null);
        posicao_13r.setIcon(null);
        posicao_14r.setIcon(null);
        posicao_15r.setIcon(null);
        posicao_16r.setIcon(null);
        posicao_17r.setIcon(null);
        posicao_18r.setIcon(null);
        posicao_19r.setIcon(null);
        posicao_20r.setIcon(null);
        posicao_1l.setIcon(null);
        posicao_2l.setIcon(null);
        posicao_3l.setIcon(null);
        posicao_4l.setIcon(null);
        posicao_5l.setIcon(null);
        posicao_6l.setIcon(null);
        posicao_7l.setIcon(null);
        posicao_8l.setIcon(null);
        posicao_9l.setIcon(null);
        posicao_10l.setIcon(null);
        posicao_11l.setIcon(null);
        posicao_12l.setIcon(null);
        posicao_13l.setIcon(null);
        posicao_14l.setIcon(null);
        posicao_15l.setIcon(null);
        posicao_16l.setIcon(null);
        posicao_17l.setIcon(null);
        posicao_18l.setIcon(null);
        posicao_19l.setIcon(null);
        posicao_20l.setIcon(null);

        last_position_left = -1;
        last_position_right = 0;

        peca1jogador1.setVisible(true);
        peca2jogador1.setVisible(true);
        peca3jogador1.setVisible(true);
        peca4jogador1.setVisible(true);
        peca5jogador1.setVisible(true);
        peca6jogador1.setVisible(true);

        peca1jogador2.setVisible(true);
        peca2jogador2.setVisible(true);
        peca3jogador2.setVisible(true);
        peca4jogador2.setVisible(true);
        peca5jogador2.setVisible(true);
        peca6jogador2.setVisible(true);

        peca1jogador3.setVisible(true);
        peca2jogador3.setVisible(true);
        peca3jogador3.setVisible(true);
        peca4jogador3.setVisible(true);
        peca5jogador3.setVisible(true);
        peca6jogador3.setVisible(true);

        peca1jogador4.setVisible(true);
        peca2jogador4.setVisible(true);
        peca3jogador4.setVisible(true);
        peca4jogador4.setVisible(true);
        peca5jogador4.setVisible(true);
        peca6jogador4.setVisible(true);
    }
    
    public void resetBoard2() {
        posicao_1r.setIcon(null);
        posicao_2r.setIcon(null);
        posicao_3r.setIcon(null);
        posicao_4r.setIcon(null);
        posicao_5r.setIcon(null);
        posicao_6r.setIcon(null);
        posicao_7r.setIcon(null);
        posicao_8r.setIcon(null);
        posicao_9r.setIcon(null);
        posicao_10r.setIcon(null);
        posicao_11r.setIcon(null);
        posicao_12r.setIcon(null);
        posicao_13r.setIcon(null);
        posicao_14r.setIcon(null);
        posicao_15r.setIcon(null);
        posicao_16r.setIcon(null);
        posicao_17r.setIcon(null);
        posicao_18r.setIcon(null);
        posicao_19r.setIcon(null);
        posicao_20r.setIcon(null);
        posicao_1l.setIcon(null);
        posicao_2l.setIcon(null);
        posicao_3l.setIcon(null);
        posicao_4l.setIcon(null);
        posicao_5l.setIcon(null);
        posicao_6l.setIcon(null);
        posicao_7l.setIcon(null);
        posicao_8l.setIcon(null);
        posicao_9l.setIcon(null);
        posicao_10l.setIcon(null);
        posicao_11l.setIcon(null);
        posicao_12l.setIcon(null);
        posicao_13l.setIcon(null);
        posicao_14l.setIcon(null);
        posicao_15l.setIcon(null);
        posicao_16l.setIcon(null);
        posicao_17l.setIcon(null);
        posicao_18l.setIcon(null);
        posicao_19l.setIcon(null);
        posicao_20l.setIcon(null);

        last_position_left = -1;
        last_position_right = 1;

    }
    
    public void setPosicao0() {
        this.posicao_0.setVisible(false);
    }

    private void drawContour() {
        last_position_left_contour=last_position_left;
        last_position_right_contour=last_position_right;
        
        javax.swing.JLabel last_piece_right = last_right_contour();
        javax.swing.JLabel last_piece_left = last_left_contour();
        String border_right = "/projetocomunicacao/resources/bordab";
        String border_left = border_right;
        if (last_position_right == 3 || last_position_right == 8 || last_position_right == 14 || last_position_right == 19) {
            border_right += "virada";
        }
        if (last_position_left == -3 || last_position_left == -8 || last_position_left == -14 || last_position_left == -19) {
            border_left += "virada";
        }
        border_right += ".png";
        border_left += ".png";
        last_piece_right.setIcon(new javax.swing.ImageIcon(getClass().getResource(border_right)));
        if (this.fachada.mostraTabuleiro().size() > 0) {
            last_piece_left.setIcon(new javax.swing.ImageIcon(getClass().getResource(border_left)));
        }
    }

    public void eraseContour() {
        
        javax.swing.JLabel last_piece_right = last_right_contour();
        javax.swing.JLabel last_piece_left = last_left_contour();
        last_piece_right.setIcon(null);
        last_piece_left.setIcon(null);
    }
    
    public void setContours() {
        last_position_left_contour=0;
        last_position_right_contour=0;
    }

    private void check_bounding_box(javax.swing.JButton peca, int value, int posicao) {
        System.out.println("entrei aqui!!!!!");
        javax.swing.JLabel last_piece_right = last_right();
        javax.swing.JLabel last_piece_left = last_left();
        
        if(this.fachada.isEmAndamento()) {
            boolean can=true;
            for(int i = 0; i < 4; ++i) {
                if(!this.fachada.mostraJogadores()[i].isStatus()) { can=false; break; }
            }
            if(!can) {
                eraseContour();
                peca.setLocation(starting_location_x, starting_location_y);
                return;
            }
        }
        
        int offset_w = 50;
        int offset_h = 90;
        int neg_offset_h = 20;

        //se peca for virada, muda os offsets positivos
        if (last_position_right == 3 || last_position_right == 8 || last_position_right == 14 || last_position_right == 19
                || last_position_left == -3 || last_position_left == -8 || last_position_left == -14 || last_position_left == -19) {
            offset_w = 85;
            //offset_h = 55;
            offset_h = 105;
            neg_offset_h = 70;
        }

        int extremo;

        if ((peca.getX() < last_piece_right.getX() + offset_w) && (peca.getX() > last_piece_right.getX() - 15) && (peca.getY() < last_piece_right.getY() + offset_h) && (peca.getY() > last_piece_right.getY() - neg_offset_h)) {
            String path = "/projetocomunicacao/resources/p";
            //checa se pode jogar

            extremo = this.fachada.getExtremoDireita();

            /*  if(this.fachada.mostraTabuleiro().size()==0){
            String auxiliar = "" + value;
            String nova = ""+auxiliar.charAt(1)+auxiliar.charAt(0);
            path += nova;
            
            }
            else {*/
            if (this.direcaoRight() == 1) {
                String auxiliar = "" + value;
                if (value == 0) {
                    auxiliar += '0';
                }
                if ((int) (auxiliar.charAt(0) - '0') == extremo) {
                    String nova = "" + auxiliar.charAt(1) + auxiliar.charAt(0);
                    path += nova;
                } else {
                    path += auxiliar;
                }
            } else {
                String auxiliar = "" + value;
                if (value == 0) {
                    auxiliar += '0';
                }
                if ((int) (auxiliar.charAt(0) - '0') != extremo) {
                    String nova = "" + auxiliar.charAt(1) + auxiliar.charAt(0);
                    path += nova;
                } else {
                    path += auxiliar;
                }
            }
            //  }

            if (last_position_right == 3 || last_position_right == 8 || last_position_right == 14 || last_position_right == 19) {
                path += "virada";
            }
            path += ".png";
            
            
            
            String aux = this.lastPath;
            this.lastPath = path;

            if (this.fachada.realizaJogada(1, posicao, path)) {
                peca.setVisible(false);
                System.out.println(">>>>> " + last_piece_right.toString());
                ++last_position_right_contour;
                eraseContour();
                //last_piece_right.setIcon(new javax.swing.ImageIcon(getClass().getResource(path)));
                System.out.println("BLABLA3");
                //++last_position_right;
                System.out.println("BLABLA3BLABLA");
                //manda pra rede que jogou no lado direito (true) e qual o path
            } else {
                this.lastPath = aux;
                eraseContour();
                //peca.setLocation(starting_location_x, starting_location_y);
            }
             eraseContour();
            peca.setLocation(starting_location_x, starting_location_y);
        } else if ((peca.getX() < last_piece_left.getX() + offset_w) && (peca.getX() > last_piece_left.getX() - 15) && (peca.getY() < last_piece_left.getY() + offset_h) && (peca.getY() > last_piece_left.getY() - neg_offset_h)
                && this.fachada.mostraTabuleiro().size() > 0) {
            String path = "/projetocomunicacao/resources/p";
            //checa se pode jogar

            extremo = this.fachada.getExtremoEsquerda();

            if (this.direcaoLeft() == 1) {
                String auxiliar = "" + value;
                if (value == 0) {
                    auxiliar += '0';
                }
                if ((int) (auxiliar.charAt(0) - '0') == extremo) {
                    String nova = "" + auxiliar.charAt(1) + auxiliar.charAt(0);
                    path += nova;
                } else {
                    path += auxiliar;
                }
            } else {
                String auxiliar = "" + value;
                if (value == 0) {
                    auxiliar += '0';
                }
                if ((int) (auxiliar.charAt(0) - '0') != extremo) {
                    String nova = "" + auxiliar.charAt(1) + auxiliar.charAt(0);
                    path += nova;
                } else {
                    path += auxiliar;
                }
            }

            if (last_position_left == -3 || last_position_left == -8 || last_position_left == -14 || last_position_left == -19) {
                path += "virada";
            }
            path += ".png";

            String aux = this.lastPath;
            this.lastPath = path;

            if (this.fachada.realizaJogada(0, posicao, path)) {
                peca.setVisible(false);
                --last_position_left_contour;
                eraseContour();
               // last_piece_left.setIcon(new javax.swing.ImageIcon(getClass().getResource(path)));
                
            } else {
                this.lastPath = aux;
                eraseContour();
                //peca.setLocation(starting_location_x, starting_location_y);
            }
            peca.setLocation(starting_location_x, starting_location_y);
        } else {
            eraseContour();
            peca.setLocation(starting_location_x, starting_location_y);
        }
        eraseContour();
        System.out.println(last_position_right);
        System.out.println(last_position_left);
    }

    private int desenhaPeca(int value, int lado, int extremo) {
        javax.swing.JLabel last_piece_right = last_right();
        javax.swing.JLabel last_piece_left = last_left();

        int offset_w = 50;
        int offset_h = 90;
        int neg_offset_h = 20;
        int ret;

        //se peca for virada, muda os offsets positivos
        if (last_position_right == 3 || last_position_right == 8 || last_position_right == 14 || last_position_right == 19
                || last_position_left == -3 || last_position_left == -8 || last_position_left == -14 || last_position_left == -19) {
            offset_w = 85;
            //offset_h = 55;
            offset_h = 105;
            neg_offset_h = 70;
        }

        if (lado == 1) {
            String path = "/projetocomunicacao/resources/p";
            if (this.direcaoRight() == 1) {
                String auxiliar = "" + value;
                if (value < 10) {
                    auxiliar = "0"+auxiliar;
                }
                if ((int) (auxiliar.charAt(0) - '0') == extremo) {
                    ret = Integer.parseInt(""+auxiliar.charAt(1));
                    String nova = "" + auxiliar.charAt(1) + auxiliar.charAt(0);
                    path += nova;
                } else {
                    ret = Integer.parseInt(""+ auxiliar.charAt(0));
                    path += auxiliar;
                }
            } else {
                String auxiliar = "" + value;
                if (value < 10) {
                     auxiliar = "0"+auxiliar;
                }
                if ((int) (auxiliar.charAt(0) - '0') != extremo) {
                    ret = Integer.parseInt(""+ auxiliar.charAt(0));
                    String nova = "" + auxiliar.charAt(1) + auxiliar.charAt(0);
                    path += nova;
                } else {
                    ret = Integer.parseInt(""+auxiliar.charAt(1));
                    path += auxiliar;
                }
            }
            //  }

                    
            if (last_position_right == 3 || last_position_right == 8 || last_position_right == 14 || last_position_right == 19) {
                path += "virada";
            }
            path += ".png";
            
            last_piece_right.setIcon(new javax.swing.ImageIcon(getClass().getResource(path)));
            ++last_position_right;
        
            
        } else {
            String path = "/projetocomunicacao/resources/p";
            //checa se pode jogar

            if (this.direcaoLeft() == 1) {
                String auxiliar = "" + value;
                if (value < 10) {
                     auxiliar = "0"+auxiliar;
                }
                if ((int) (auxiliar.charAt(0) - '0') == extremo) {
                    ret = Integer.parseInt(""+ auxiliar.charAt(1));
                    String nova = "" + auxiliar.charAt(1) + auxiliar.charAt(0);
                    path += nova;
                } else {
                    ret = Integer.parseInt(""+ auxiliar.charAt(0));
                    path += auxiliar;
                }
            } else {
                String auxiliar = "" + value;
                if (value < 10) {
                     auxiliar = "0"+auxiliar;
                }
                if ((int) (auxiliar.charAt(0) - '0') != extremo) {
                    ret = Integer.parseInt(""+ auxiliar.charAt(0));
                    String nova = "" + auxiliar.charAt(1) + auxiliar.charAt(0);
                    path += nova;
                } else {
                    ret = Integer.parseInt(""+ auxiliar.charAt(1));
                    path += auxiliar;
                }
            }
            
                    
            if (last_position_left == -3 || last_position_left == -8 || last_position_left == -14 || last_position_left == -19) {
                path += "virada";
            }
            path += ".png";
            
            last_piece_left.setIcon(new javax.swing.ImageIcon(getClass().getResource(path)));
            --last_position_left;
            
        }
        return ret;
    }

    public void desenharTabuleiro() {
        last_position_left = -1;
        last_position_right = 0;
        
        Peca peca = this.fachada.mostraTabuleiro().get(this.fachada.getIndInicial());
        int top, bottom;
        bottom = Math.max(peca.getValor1(), peca.getValor2());
        top = Math.min(peca.getValor1(), peca.getValor2());
        
        this.desenhaPeca(top*10+bottom, 1, -1);
        
        System.out.println("DESENHEI A " + top + bottom);
        
        int extremoE = bottom;
        int extremoD = top;
        
        for(int i = this.fachada.getIndInicial()-1; i>=0; --i){
            if(i>=this.fachada.mostraTabuleiro().size()) continue;
           peca = this.fachada.mostraTabuleiro().get(i);
            top = Math.max(peca.getValor1(), peca.getValor2());
            bottom = Math.min(peca.getValor1(), peca.getValor2());
            System.out.println("ENTREI PRA BAIXO E DESENHEI A " + top+bottom);
            extremoE = this.desenhaPeca(10*top+bottom, 0, extremoE);
        }
        for(int i = this.fachada.getIndInicial()+1; i<this.fachada.mostraTabuleiro().size(); ++i){
            if(i>=this.fachada.mostraTabuleiro().size()) continue;
            peca = this.fachada.mostraTabuleiro().get(i);
            top = Math.max(peca.getValor1(), peca.getValor2());
            bottom = Math.min(peca.getValor1(), peca.getValor2());
            System.out.println("ENTREI PRA CIMA E DESENHEI A " + top+bottom);
            extremoD = this.desenhaPeca(10*top+bottom, 1, extremoD);
        }
    }

    /*public void desenharUltimaPeca(int lado, String path) {
        System.out.println("last path: " + this.lastPath);
        System.out.println("path " + path);
        if (path.equals(this.lastPath)) {
            return;
        }
        System.out.println("wuuuuuuuuuuuuuuuuuuuuut");
        this.lastPath = path;
        javax.swing.JLabel last_piece_right = last_right();
        javax.swing.JLabel last_piece_left = last_left();
        if (lado == 1) {//lado direito
            last_piece_right.setIcon(new javax.swing.ImageIcon(getClass().getResource(path)));
            System.out.println("BLABLA1");
            ++last_position_right;
            System.out.println("BLABLA1BLABLA");
        } else {
            last_piece_left.setIcon(new javax.swing.ImageIcon(getClass().getResource(path)));
            --last_position_left;
        }
    }*/

    public void setarPlacar() {
        ScoreDupla1.setText(new Integer(this.fachada.mostraPlacar1()).toString());
        ScoreDupla2.setText(new Integer(this.fachada.mostraPlacar2()).toString());
    }

    private void ExitGameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitGameButtonActionPerformed
        // TODO add your handling code here:
        QuitDialog.setLocationRelativeTo(game_panel);
        QuitDialog.setVisible(true);
        QuitDialog.setModal(true);
    }//GEN-LAST:event_ExitGameButtonActionPerformed

    private void formWindowIconified(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowIconified
        // TODO add your handling code here:
        /*lastx = peca4jogador3.getX();
        lasty = peca4jogador3.getY();*/
        lastx_peca1 = peca1jogador3.getX();
        lasty_peca1 = peca1jogador3.getY();
        lastx_peca2 = peca2jogador3.getX();
        lasty_peca2 = peca2jogador3.getY();
        lastx_peca3 = peca3jogador3.getX();
        lasty_peca3 = peca3jogador3.getY();
        lastx_peca4 = peca4jogador3.getX();
        lasty_peca4 = peca4jogador3.getY();
        lastx_peca5 = peca5jogador3.getX();
        lasty_peca5 = peca5jogador3.getY();
        lastx_peca6 = peca6jogador3.getX();
        lasty_peca6 = peca6jogador3.getY();
    }//GEN-LAST:event_formWindowIconified

    private void formWindowDeiconified(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowDeiconified
        // TODO add your handling code here:
        /*if(lastx != 0 && lasty != 0){
        peca4jogador3.setLocation(lastx_peca4,lasty_peca4);
        peca4jogador3.repaint();
        }*/
    }//GEN-LAST:event_formWindowDeiconified

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        // TODO add your handling code here:
       /* if(lastx != 0 && lasty != 0){
        peca4jogador3.setLocation(lastx_peca4,lasty_peca4);
        peca4jogador3.repaint();
        }*/
    }//GEN-LAST:event_formWindowGainedFocus

    private void formWindowLostFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowLostFocus
        // TODO add your handling code here:
        /*lastx = peca4jogador3.getX();
        lasty = peca4jogador3.getY*/
        lastx_peca1 = peca1jogador3.getX();
        lasty_peca1 = peca1jogador3.getY();
        lastx_peca2 = peca2jogador3.getX();
        lasty_peca2 = peca2jogador3.getY();
        lastx_peca3 = peca3jogador3.getX();
        lasty_peca3 = peca3jogador3.getY();
        lastx_peca4 = peca4jogador3.getX();
        lasty_peca4 = peca4jogador3.getY();
        lastx_peca5 = peca5jogador3.getX();
        lasty_peca5 = peca5jogador3.getY();
        lastx_peca6 = peca6jogador3.getX();
        lasty_peca6 = peca6jogador3.getY();
    }//GEN-LAST:event_formWindowLostFocus

    private void peca4jogador3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_peca4jogador3MousePressed
        // TODO add your handling code here:
        if(javax.swing.SwingUtilities.isLeftMouseButton(evt)){
            drag = true;
            mouse_x = evt.getXOnScreen();
            mouse_y = evt.getYOnScreen();
            starting_location_x = peca4jogador3.getX();
            starting_location_y = peca4jogador3.getY();
            drawContour();
        }
    }//GEN-LAST:event_peca4jogador3MousePressed

    private void peca4jogador3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_peca4jogador3MouseReleased
        // TODO add your handling code here:
        drag = false;
        String s = this.peca4jogador3.getIcon().toString();
        int pos = s.lastIndexOf("/");
        s = s.substring(pos + 2);
        int top_value = (int) (s.charAt(0) - '0');
        int bottom_value = (int) (s.charAt(1) - '0');
        int piece = top_value * 10 + bottom_value;
        check_bounding_box(peca4jogador3, piece, 3);
    }//GEN-LAST:event_peca4jogador3MouseReleased

    private void peca4jogador3MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_peca4jogador3MouseDragged

        if (drag == true) {
            int x_temp = evt.getXOnScreen();
            int y_temp = evt.getYOnScreen();
            int x_diff = x_temp - mouse_x;
            int y_diff = y_temp - mouse_y;
            int x_final = peca4jogador3.getX() + x_diff;
            int y_final = peca4jogador3.getY() + y_diff;
            peca4jogador3.setLocation(x_final, y_final);
            mouse_x = evt.getXOnScreen();
            mouse_y = evt.getYOnScreen();
        }
    }//GEN-LAST:event_peca4jogador3MouseDragged

private void peca1jogador3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_peca1jogador3MousePressed
// TODO add your handling code here:
    if(javax.swing.SwingUtilities.isLeftMouseButton(evt)){
        drag = true;
        mouse_x = evt.getXOnScreen();
        mouse_y = evt.getYOnScreen();
        starting_location_x = peca1jogador3.getX();
        starting_location_y = peca1jogador3.getY();
        drawContour();
    }
}//GEN-LAST:event_peca1jogador3MousePressed

private void peca1jogador3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_peca1jogador3MouseReleased
// TODO add your handling code here:
    drag = false;
    String s = this.peca1jogador3.getIcon().toString();
    int pos = s.lastIndexOf("/");
    s = s.substring(pos + 2);
    int top_value = (int) (s.charAt(0) - '0');
    int bottom_value = (int) (s.charAt(1) - '0');
    int piece = top_value * 10 + bottom_value;
    check_bounding_box(peca1jogador3, piece, 0);
}//GEN-LAST:event_peca1jogador3MouseReleased

private void peca1jogador3MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_peca1jogador3MouseDragged
// TODO add your handling code here:
    if (drag == true) {
        int x_temp = evt.getXOnScreen();
        int y_temp = evt.getYOnScreen();
        int x_diff = x_temp - mouse_x;
        int y_diff = y_temp - mouse_y;
        int x_final = peca1jogador3.getX() + x_diff;
        int y_final = peca1jogador3.getY() + y_diff;
        peca1jogador3.setLocation(x_final, y_final);
        mouse_x = evt.getXOnScreen();
        mouse_y = evt.getYOnScreen();
    }
}//GEN-LAST:event_peca1jogador3MouseDragged

private void peca2jogador3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_peca2jogador3MousePressed
// TODO add your handling code here:
    if(javax.swing.SwingUtilities.isLeftMouseButton(evt)){
        drag = true;
        mouse_x = evt.getXOnScreen();
        mouse_y = evt.getYOnScreen();
        starting_location_x = peca2jogador3.getX();
        starting_location_y = peca2jogador3.getY();
        drawContour();
    }
}//GEN-LAST:event_peca2jogador3MousePressed

private void peca2jogador3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_peca2jogador3MouseReleased
// TODO add your handling code here:
    drag = false;
    String s = this.peca2jogador3.getIcon().toString();
    int pos = s.lastIndexOf("/");
    s = s.substring(pos + 2);
    int top_value = (int) (s.charAt(0) - '0');
    int bottom_value = (int) (s.charAt(1) - '0');
    int piece = top_value * 10 + bottom_value;
    check_bounding_box(peca2jogador3, piece, 1);
}//GEN-LAST:event_peca2jogador3MouseReleased

private void peca2jogador3MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_peca2jogador3MouseDragged
// TODO add your handling code here:
    if (drag == true) {
        int x_temp = evt.getXOnScreen();
        int y_temp = evt.getYOnScreen();
        int x_diff = x_temp - mouse_x;
        int y_diff = y_temp - mouse_y;
        int x_final = peca2jogador3.getX() + x_diff;
        int y_final = peca2jogador3.getY() + y_diff;
        peca2jogador3.setLocation(x_final, y_final);
        mouse_x = evt.getXOnScreen();
        mouse_y = evt.getYOnScreen();
    }
}//GEN-LAST:event_peca2jogador3MouseDragged

private void peca3jogador3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_peca3jogador3MousePressed
// TODO add your handling code here:
    if(javax.swing.SwingUtilities.isLeftMouseButton(evt)){
        drag = true;
        mouse_x = evt.getXOnScreen();
        mouse_y = evt.getYOnScreen();
        starting_location_x = peca3jogador3.getX();
        starting_location_y = peca3jogador3.getY();
        drawContour();
    }
}//GEN-LAST:event_peca3jogador3MousePressed

private void peca3jogador3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_peca3jogador3MouseReleased
// TODO add your handling code here:
    drag = false;
    String s = this.peca3jogador3.getIcon().toString();
    int pos = s.lastIndexOf("/");
    s = s.substring(pos + 2);
    int top_value = (int) (s.charAt(0) - '0');
    int bottom_value = (int) (s.charAt(1) - '0');
    int piece = top_value * 10 + bottom_value;
    check_bounding_box(peca3jogador3, piece, 2);
}//GEN-LAST:event_peca3jogador3MouseReleased

private void peca3jogador3MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_peca3jogador3MouseDragged
// TODO add your handling code here:
    if (drag == true) {
        int x_temp = evt.getXOnScreen();
        int y_temp = evt.getYOnScreen();
        int x_diff = x_temp - mouse_x;
        int y_diff = y_temp - mouse_y;
        int x_final = peca3jogador3.getX() + x_diff;
        int y_final = peca3jogador3.getY() + y_diff;
        peca3jogador3.setLocation(x_final, y_final);
        mouse_x = evt.getXOnScreen();
        mouse_y = evt.getYOnScreen();
    }
}//GEN-LAST:event_peca3jogador3MouseDragged

private void peca5jogador3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_peca5jogador3MousePressed
// TODO add your handling code here:
    if(javax.swing.SwingUtilities.isLeftMouseButton(evt)){
        drag = true;
        mouse_x = evt.getXOnScreen();
        mouse_y = evt.getYOnScreen();
        starting_location_x = peca5jogador3.getX();
        starting_location_y = peca5jogador3.getY();
        drawContour();
    }
}//GEN-LAST:event_peca5jogador3MousePressed

private void peca5jogador3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_peca5jogador3MouseReleased
// TODO add your handling code here:
    drag = false;
    String s = this.peca5jogador3.getIcon().toString();
    int pos = s.lastIndexOf("/");
    s = s.substring(pos + 2);
    int top_value = (int) (s.charAt(0) - '0');
    int bottom_value = (int) (s.charAt(1) - '0');
    int piece = top_value * 10 + bottom_value;
    check_bounding_box(peca5jogador3, piece, 4);
}//GEN-LAST:event_peca5jogador3MouseReleased

private void peca5jogador3MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_peca5jogador3MouseDragged
// TODO add your handling code here:
    if (drag == true) {
        int x_temp = evt.getXOnScreen();
        int y_temp = evt.getYOnScreen();
        int x_diff = x_temp - mouse_x;
        int y_diff = y_temp - mouse_y;
        int x_final = peca5jogador3.getX() + x_diff;
        int y_final = peca5jogador3.getY() + y_diff;
        peca5jogador3.setLocation(x_final, y_final);
        mouse_x = evt.getXOnScreen();
        mouse_y = evt.getYOnScreen();
    }
}//GEN-LAST:event_peca5jogador3MouseDragged

private void peca6jogador3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_peca6jogador3MousePressed
// TODO add your handling code here:
    if(javax.swing.SwingUtilities.isLeftMouseButton(evt)){
        drag = true;
        mouse_x = evt.getXOnScreen();
        mouse_y = evt.getYOnScreen();
        starting_location_x = peca6jogador3.getX();
        starting_location_y = peca6jogador3.getY();
         drawContour();
    }
}//GEN-LAST:event_peca6jogador3MousePressed

private void peca6jogador3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_peca6jogador3MouseReleased
// TODO add your handling code here:
    drag = false;
    String s = this.peca6jogador3.getIcon().toString();
    int pos = s.lastIndexOf("/");
    s = s.substring(pos + 2);
    int top_value = (int) (s.charAt(0) - '0');
    int bottom_value = (int) (s.charAt(1) - '0');
    int piece = top_value * 10 + bottom_value;
    check_bounding_box(peca6jogador3, piece, 5);
}//GEN-LAST:event_peca6jogador3MouseReleased

private void peca6jogador3MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_peca6jogador3MouseDragged
// TODO add your handling code here:
    if (drag == true) {
        int x_temp = evt.getXOnScreen();
        int y_temp = evt.getYOnScreen();
        int x_diff = x_temp - mouse_x;
        int y_diff = y_temp - mouse_y;
        int x_final = peca6jogador3.getX() + x_diff;
        int y_final = peca6jogador3.getY() + y_diff;
        peca6jogador3.setLocation(x_final, y_final);
        mouse_x = evt.getXOnScreen();
        mouse_y = evt.getYOnScreen();
    }
}//GEN-LAST:event_peca6jogador3MouseDragged

    private void sairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sairActionPerformed
        // TODO add your handling code here:
        this.fachada.querSair();
        System.exit(0);
    }//GEN-LAST:event_sairActionPerformed
    
    public void mostraQuitDialog(){
        QuitDialog.setLocationRelativeTo(game_panel);
        QuitDialog.setModal(true);
        QuitDialog.setVisible(true);
    }
    
    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarActionPerformed
        // TODO add your handling code here:
        QuitDialog.setVisible(false);
        QuitDialog.setModal(false);
    }//GEN-LAST:event_cancelarActionPerformed

    private void ToqueDialogWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_ToqueDialogWindowActivated
        // TODO add your handling code here:
        Thread t = new Thread();
        t.start();
        try {
            t.sleep(1500);
        } catch (InterruptedException ex) {
            ex.printStackTrace();
        }
        tiraToqueDialog();
    }//GEN-LAST:event_ToqueDialogWindowActivated

private void WinnerDialogWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_WinnerDialogWindowActivated
// TODO add your handling code here:
     Thread t = new Thread();
        t.start();
        try {
            t.sleep(1500);
        } catch (InterruptedException ex) {
            ex.printStackTrace();
        }
        tiraGanhou();
}//GEN-LAST:event_WinnerDialogWindowActivated

private void LoserDialogWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_LoserDialogWindowActivated
// TODO add your handling code here:
     Thread t = new Thread();
        t.start();
        try {
            t.sleep(1500);
        } catch (InterruptedException ex) {
            ex.printStackTrace();
        }
        tiraPerdeu();
}//GEN-LAST:event_LoserDialogWindowActivated

private void ToqueDialogWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_ToqueDialogWindowOpened
// TODO add your handling code here:
     Thread t = new Thread();
     t.start();
     try {
	t.sleep(1500);
     } catch (InterruptedException ex) {
	ex.printStackTrace();
     }
     tiraToqueDialog();
}//GEN-LAST:event_ToqueDialogWindowOpened

private void ChampionDialogWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_ChampionDialogWindowOpened
// TODO add your handling code here:
    Thread t = new Thread();
    t.start();
    try {
        t.sleep(1500);
    } catch (InterruptedException ex) {
        ex.printStackTrace();
    }
    tiraChampionDialog();
}//GEN-LAST:event_ChampionDialogWindowOpened

private void ChampionDialogWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_ChampionDialogWindowActivated
// TODO add your handling code here:
    Thread t = new Thread();
    t.start();
    try {
        t.sleep(1500);
    } catch (InterruptedException ex) {
        ex.printStackTrace();
    }
    tiraChampionDialog();
}//GEN-LAST:event_ChampionDialogWindowActivated

private void PerdedorDialogWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_PerdedorDialogWindowActivated
// TODO add your handling code here:
    Thread t = new Thread();
    t.start();
    try {
        t.sleep(1500);
    } catch (InterruptedException ex) {
        ex.printStackTrace();
    }
    tiraPerdedorDialog();
}//GEN-LAST:event_PerdedorDialogWindowActivated

private void PerdedorDialogWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_PerdedorDialogWindowOpened
// TODO add your handling code here:
    Thread t = new Thread();
    t.start();
    try {
        t.sleep(1500);
    } catch (InterruptedException ex) {
        ex.printStackTrace();
    }
    tiraPerdedorDialog();
}//GEN-LAST:event_PerdedorDialogWindowOpened

    private void ContagemVitoriaDialogWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_ContagemVitoriaDialogWindowActivated
        // TODO add your handling code here:
    }//GEN-LAST:event_ContagemVitoriaDialogWindowActivated

    private void ContagemDerrotaDialogWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_ContagemDerrotaDialogWindowActivated
        // TODO add your handling code here:
    }//GEN-LAST:event_ContagemDerrotaDialogWindowActivated

    private void exit_disconnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exit_disconnectActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exit_disconnectActionPerformed

    private void sair_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sair_buttonActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_sair_buttonActionPerformed

    private void CloseDialogWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_CloseDialogWindowActivated
        // TODO add your handling code here:
    }//GEN-LAST:event_CloseDialogWindowActivated

    public void mostraToqueDialog() {
        ToqueDialog.setLocationRelativeTo(game_panel);
	ToqueDialog.setModal(false);
        ToqueDialog.setVisible(true);
    }

    public void tiraToqueDialog() {
        ToqueDialog.setVisible(false);
        ToqueDialog.setModal(false);
    }

    public void mostraChampionDialog(){
        ChampionDialog.setLocationRelativeTo(game_panel);
        ChampionDialog.setModal(false);
        ChampionDialog.setVisible(true);
    }
    
    public void tiraChampionDialog(){
        ChampionDialog.setVisible(false);
        ChampionDialog.setModal(false);
    }
    
     public void mostraPerdedorDialog(){
        PerdedorDialog.setLocationRelativeTo(game_panel);
        PerdedorDialog.setModal(false);
        PerdedorDialog.setVisible(true);
    }
    
    public void tiraPerdedorDialog(){
        PerdedorDialog.setVisible(false);
        PerdedorDialog.setModal(false);
    }
    
    public void nomeVerde() {
        // turno = turno%4;

        turno = (this.fachada.getVez() - this.fachada.getPlayer() + 4) % 4;
        turno = (turno + 2) % 4;
        switch (turno) {
            case (0):
                NomeJogador1.setForeground(Color.green);
                NomeJogador4.setForeground(Color.white);
                NomeJogador2.setForeground(Color.white);
                NomeJogador3.setForeground(Color.white);
                break;
            case (1):
                NomeJogador2.setForeground(Color.green);
                NomeJogador4.setForeground(Color.white);
                NomeJogador1.setForeground(Color.white);
                NomeJogador3.setForeground(Color.white);
                break;
            case (2):
                NomeJogador3.setForeground(Color.green);
                NomeJogador4.setForeground(Color.white);
                NomeJogador2.setForeground(Color.white);
                NomeJogador1.setForeground(Color.white);
                break;
            case (3):
                NomeJogador4.setForeground(Color.green);
                NomeJogador1.setForeground(Color.white);
                NomeJogador2.setForeground(Color.white);
                NomeJogador3.setForeground(Color.white);
                break;
        }

        // turno = (++turno)%4;
    }

    public void escreveNomes() {
        int ind = this.fachada.getPlayer();
        if (this.fachada.mostraJogadores()[ind] != null) {
            NomeJogador3.setText(this.fachada.mostraJogadores()[ind].getNome());
            NomeJogador3.setEnabled(this.fachada.mostraJogadores()[ind].isStatus());
        } else {
            NomeJogador3.setText("Aguardando...");
            NomeJogador3.setEnabled(true);
        }
        
        DuplaJogador3.setText(((ind&1)>0)?"Dupla 2":"Dupla 1");

        ind = (ind + 1) % 4;
        if (this.fachada.mostraJogadores()[ind] != null) {
            NomeJogador4.setText(this.fachada.mostraJogadores()[ind].getNome());
            NomeJogador4.setEnabled(this.fachada.mostraJogadores()[ind].isStatus());
        } else {
            NomeJogador4.setText("Aguardando...");
            NomeJogador4.setEnabled(false);
        }
        
        DuplaJogador4.setText(((ind&1)>0)?"Dupla 2":"Dupla 1");
        ind = (ind + 1) % 4;
        if (this.fachada.mostraJogadores()[ind] != null) {
            NomeJogador1.setText(this.fachada.mostraJogadores()[ind].getNome());
             NomeJogador1.setEnabled(this.fachada.mostraJogadores()[ind].isStatus());
        } else {
            NomeJogador1.setText("Aguardando...");
            NomeJogador1.setEnabled(false);
        }
       
        DuplaJogador1.setText(((ind&1)>0)?"Dupla 2":"Dupla 1");
        ind = (ind + 1) % 4;
        if (this.fachada.mostraJogadores()[ind] != null) {
            NomeJogador2.setText(this.fachada.mostraJogadores()[ind].getNome());
           NomeJogador2.setEnabled(this.fachada.mostraJogadores()[ind].isStatus());
        } else {
            NomeJogador2.setText("Aguardando...");
            NomeJogador2.setEnabled(false);
        }
        
        DuplaJogador2.setText(((ind&1)>0)?"Dupla 2":"Dupla 1");
    }
    boolean first = true;

    public void outrasPecas() {
        int ind = this.fachada.getPlayer();
        ind = (ind + 1) % 4;
        if (this.fachada.mostraJogadores()[ind] != null && this.fachada.mostraJogadores()[ind].getPecas().size() != 0) {
            LinkedList<Peca> pecas = this.fachada.mostraJogadores()[ind].getPecas();
            boolean[] usadas = this.fachada.mostraJogadores()[ind].getUsadas();
            if (usadas[0] == true) {
                peca1jogador4.setVisible(false);
            } else {
                peca1jogador4.setVisible(true);
            }
            if (usadas[1] == true) {
                peca2jogador4.setVisible(false);
            } else {
                peca2jogador4.setVisible(true);
            }
            if (usadas[2] == true) {
                peca3jogador4.setVisible(false);
            } else {
                peca3jogador4.setVisible(true);
            }
            if (usadas[3] == true) {
                peca4jogador4.setVisible(false);
            } else {
                peca4jogador4.setVisible(true);
            }
            if (usadas[4] == true) {
                peca5jogador4.setVisible(false);
            } else {
                peca5jogador4.setVisible(true);
            }
            if (usadas[5] == true) {
                peca6jogador4.setVisible(false);
            } else {
                peca6jogador4.setVisible(true);
            }
        } else {
            peca1jogador4.setVisible(false);
            peca2jogador4.setVisible(false);
            peca3jogador4.setVisible(false);
            peca4jogador4.setVisible(false);
            peca5jogador4.setVisible(false);
            peca6jogador4.setVisible(false);
        }
        ind = (ind + 1) % 4;
        if (this.fachada.mostraJogadores()[ind] != null && this.fachada.mostraJogadores()[ind].getPecas().size() != 0) {
            LinkedList<Peca> pecas = this.fachada.mostraJogadores()[ind].getPecas();
            boolean[] usadas = this.fachada.mostraJogadores()[ind].getUsadas();
            if (usadas[0] == true) {
                peca1jogador1.setVisible(false);
            } else {
                peca1jogador1.setVisible(true);
            }
            if (usadas[1] == true) {
                peca2jogador1.setVisible(false);
            } else {
                peca2jogador1.setVisible(true);
            }
            if (usadas[2] == true) {
                peca3jogador1.setVisible(false);
            } else {
                peca3jogador1.setVisible(true);
            }
            if (usadas[3] == true) {
                peca4jogador1.setVisible(false);
            } else {
                peca4jogador1.setVisible(true);
            }
            if (usadas[4] == true) {
                peca5jogador1.setVisible(false);
            } else {
                peca5jogador1.setVisible(true);
            }
            if (usadas[5] == true) {
                peca6jogador1.setVisible(false);
            } else {
                peca6jogador1.setVisible(true);
            }
        } else {
            peca1jogador1.setVisible(false);
            peca2jogador1.setVisible(false);
            peca3jogador1.setVisible(false);
            peca4jogador1.setVisible(false);
            peca5jogador1.setVisible(false);
            peca6jogador1.setVisible(false);
        }
        ind = (ind + 1) % 4;
        if (this.fachada.mostraJogadores()[ind] != null && this.fachada.mostraJogadores()[ind].getPecas().size() != 0) {
            LinkedList<Peca> pecas = this.fachada.mostraJogadores()[ind].getPecas();
            boolean[] usadas = this.fachada.mostraJogadores()[ind].getUsadas();
            if (usadas[0] == true) {
                peca1jogador2.setVisible(false);
            } else {
                peca1jogador2.setVisible(true);
            }
            if (usadas[1] == true) {
                peca2jogador2.setVisible(false);
            } else {
                peca2jogador2.setVisible(true);
            }
            if (usadas[2] == true) {
                peca3jogador2.setVisible(false);
            } else {
                peca3jogador2.setVisible(true);
            }
            if (usadas[3] == true) {
                peca4jogador2.setVisible(false);
            } else {
                peca4jogador2.setVisible(true);
            }
            if (usadas[4] == true) {
                peca5jogador2.setVisible(false);
            } else {
                peca5jogador2.setVisible(true);
            }
            if (usadas[5] == true) {
                peca6jogador2.setVisible(false);
            } else {
                peca6jogador2.setVisible(true);
            }
        } else {
            peca1jogador2.setVisible(false);
            peca2jogador2.setVisible(false);
            peca3jogador2.setVisible(false);
            peca4jogador2.setVisible(false);
            peca5jogador2.setVisible(false);
            peca6jogador2.setVisible(false);
        }
    }

    public void desenharPecas() {

        LinkedList<Peca> pecas = this.fachada.mostraPecas();
        boolean[] usadas = this.fachada.mostraUsadas();
        int[][] valor = new int[pecas.size()][2];

        for (int i = 0; i < pecas.size(); ++i) {
            valor[i][0] = pecas.get(i).getValor1();
            valor[i][1] = pecas.get(i).getValor2();
        }

        String path;
        int max_value;
        int min_value;
        String s;
        if (pecas.size() == 0) {
            Arrays.fill(usadas, true); //talvez de merda, deixa assim por enquanto
        }
        if (usadas[0] == false) {
            peca1jogador3.setVisible(true);
            min_value = Math.min(valor[0][0], valor[0][1]);
            max_value = Math.max(valor[0][0], valor[0][1]);
            max_value *= 10;
            min_value += max_value;
            System.out.println(min_value);
            s = new Integer(min_value).toString();
            if (s.equals("0")) {
                s += "0";
            }
            path = "/projetocomunicacao/resources/p" + s + ".png";
            peca1jogador3.setIcon(new javax.swing.ImageIcon(getClass().getResource(path)));
        } else {
            peca1jogador3.setVisible(false);
        }

        if (usadas[1] == false) {
            peca2jogador3.setVisible(true);
            min_value = Math.min(valor[1][0], valor[1][1]);
            max_value = Math.max(valor[1][0], valor[1][1]);
            max_value *= 10;
            min_value += max_value;
            System.out.println(min_value);
            s = new Integer(min_value).toString();
            if (s.equals("0")) {
                s += "0";
            }
            path = "/projetocomunicacao/resources/p" + s + ".png";
            peca2jogador3.setIcon(new javax.swing.ImageIcon(getClass().getResource(path)));
        } else {
            peca2jogador3.setVisible(false);
        }

        if (usadas[2] == false) {
            peca3jogador3.setVisible(true);
            min_value = Math.min(valor[2][0], valor[2][1]);
            max_value = Math.max(valor[2][0], valor[2][1]);
            max_value *= 10;
            min_value += max_value;
            System.out.println(min_value);
            s = new Integer(min_value).toString();
            if (s.equals("0")) {
                s += "0";
            }
            path = "/projetocomunicacao/resources/p" + s + ".png";
            peca3jogador3.setIcon(new javax.swing.ImageIcon(getClass().getResource(path)));
        } else {
            peca3jogador3.setVisible(false);
        }

        if (usadas[3] == false) {
            peca4jogador3.setVisible(true);
            min_value = Math.min(valor[3][0], valor[3][1]);
            max_value = Math.max(valor[3][0], valor[3][1]);
            max_value *= 10;
            min_value += max_value;
            System.out.println(min_value);
            s = new Integer(min_value).toString();
            if (s.equals("0")) {
                s += "0";
            }
            path = "/projetocomunicacao/resources/p" + s + ".png";
            peca4jogador3.setIcon(new javax.swing.ImageIcon(getClass().getResource(path)));
        } else {
            peca4jogador3.setVisible(false);
        }

        if (usadas[4] == false) {
            peca5jogador3.setVisible(true);
            min_value = Math.min(valor[4][0], valor[4][1]);
            max_value = Math.max(valor[4][0], valor[4][1]);
            max_value *= 10;
            min_value += max_value;
            System.out.println(min_value);
            s = new Integer(min_value).toString();
            if (s.equals("0")) {
                s += "0";
            }
            path = "/projetocomunicacao/resources/p" + s + ".png";
            peca5jogador3.setIcon(new javax.swing.ImageIcon(getClass().getResource(path)));
        } else {
            peca5jogador3.setVisible(false);
        }

        if (usadas[5] == false) {
            peca6jogador3.setVisible(true);
            min_value = Math.min(valor[5][0], valor[5][1]);
            max_value = Math.max(valor[5][0], valor[5][1]);
            max_value *= 10;
            min_value += max_value;
            System.out.println(min_value);
            s = new Integer(min_value).toString();
            if (s.equals("0")) {
                s += "0";
            }
            path = "/projetocomunicacao/resources/p" + s + ".png";
            peca6jogador3.setIcon(new javax.swing.ImageIcon(getClass().getResource(path)));
        } else {
            peca6jogador3.setVisible(false);
        }
        System.out.println("tamanho " + this.fachada.mostraTabuleiro().size());
        /*
         * if (this.fachada.mostraTabuleiro().size() == 1) {
            Peca peca = this.fachada.mostraTabuleiro().get(0);
            int valor1 = peca.getValor1(), valor2 = peca.getValor2();
            int temp = valor1;
            valor1 = valor2;
            valor2 = temp;
            if (valor1 != 0) {
                valor1 = valor1 * 10 + valor2;
                path = "/projetocomunicacao/resources/p" + valor1 + ".png";
            } else {
                path = "/projetocomunicacao/resources/p" + "0" + valor2 + ".png";
            }
            posicao_0.setVisible(true);
            posicao_0.setIcon(new javax.swing.ImageIcon(getClass().getResource(path)));
            if (last_position_right == 0) {
                System.out.println("BLABLA2");
                ++last_position_right;
                System.out.println("BLABLA2BLABLA");
            }
        }*/
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws IOException, ClassNotFoundException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Background;
    private javax.swing.JDialog ChampionDialog;
    private javax.swing.JDialog CloseDialog;
    private javax.swing.JDialog ContagemDerrotaDialog;
    private javax.swing.JDialog ContagemVitoriaDialog;
    private javax.swing.JDialog DisconnectDialog;
    private javax.swing.JLabel DuplaJogador1;
    private javax.swing.JLabel DuplaJogador2;
    private javax.swing.JLabel DuplaJogador3;
    private javax.swing.JLabel DuplaJogador4;
    private javax.swing.JButton ExitGameButton;
    private javax.swing.JDialog LoserDialog;
    private javax.swing.JLabel NomeJogador1;
    private javax.swing.JLabel NomeJogador2;
    private javax.swing.JLabel NomeJogador3;
    private javax.swing.JLabel NomeJogador4;
    private javax.swing.JDialog PerdedorDialog;
    private javax.swing.JDialog QuitDialog;
    private javax.swing.JLabel ScoreDupla1;
    private javax.swing.JLabel ScoreDupla2;
    private javax.swing.JDialog ToqueDialog;
    private javax.swing.JDialog WinnerDialog;
    private javax.swing.JLabel alert_label;
    private javax.swing.JLabel campeao;
    private javax.swing.JButton cancelar;
    private javax.swing.JLabel champion_background;
    private javax.swing.JPanel champion_panel;
    private javax.swing.JLabel close_background;
    private javax.swing.JPanel close_panel;
    private javax.swing.JLabel closed;
    private javax.swing.JLabel cry_label;
    private javax.swing.JLabel derrota;
    private javax.swing.JLabel derrota_count;
    private javax.swing.JLabel disconnect_background;
    private javax.swing.JLabel disconnect_icon;
    private javax.swing.JPanel disconnect_panel;
    private javax.swing.JLabel dupla1contagemd;
    private javax.swing.JLabel dupla1contagemv;
    private javax.swing.JLabel dupla2contagemd;
    private javax.swing.JLabel dupla2contagemv;
    private javax.swing.JLabel duplacampea;
    private javax.swing.JLabel duplacampea1;
    private javax.swing.JLabel duplaperdedora;
    private javax.swing.JLabel duplavencedora;
    private javax.swing.JLabel espere;
    private javax.swing.JLabel espere1;
    private javax.swing.JButton exit_disconnect;
    private javax.swing.JLabel finalizado;
    private javax.swing.JPanel game_panel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jogadas;
    private javax.swing.JLabel jogador_desconectado;
    private javax.swing.JLabel label_pontosdupla1d;
    private javax.swing.JLabel label_pontosdupla1v;
    private javax.swing.JLabel label_pontosdupla2d;
    private javax.swing.JLabel label_pontosdupla2v;
    private javax.swing.JPanel lose_count_panel;
    private javax.swing.JLabel loser_background;
    private javax.swing.JLabel loser_count_background;
    private javax.swing.JLabel loser_count_icon;
    private javax.swing.JPanel loser_panel;
    private javax.swing.JLabel medal_label;
    private javax.swing.JLabel mudar;
    private javax.swing.JButton peca1jogador1;
    private javax.swing.JButton peca1jogador2;
    private javax.swing.JButton peca1jogador3;
    private javax.swing.JButton peca1jogador4;
    private javax.swing.JButton peca2jogador1;
    private javax.swing.JButton peca2jogador2;
    private javax.swing.JButton peca2jogador3;
    private javax.swing.JButton peca2jogador4;
    private javax.swing.JButton peca3jogador1;
    private javax.swing.JButton peca3jogador2;
    private javax.swing.JButton peca3jogador3;
    private javax.swing.JButton peca3jogador4;
    private javax.swing.JButton peca4jogador1;
    private javax.swing.JButton peca4jogador2;
    private javax.swing.JButton peca4jogador3;
    private javax.swing.JButton peca4jogador4;
    private javax.swing.JButton peca5jogador1;
    private javax.swing.JButton peca5jogador2;
    private javax.swing.JButton peca5jogador3;
    private javax.swing.JButton peca5jogador4;
    private javax.swing.JButton peca6jogador1;
    private javax.swing.JButton peca6jogador2;
    private javax.swing.JButton peca6jogador3;
    private javax.swing.JButton peca6jogador4;
    private javax.swing.JLabel perdedor_background;
    private javax.swing.JLabel perdedor_label;
    private javax.swing.JLabel perdedor_label1;
    private javax.swing.JPanel perdedor_panel;
    private javax.swing.JLabel pergunta;
    private javax.swing.JLabel posicao_0;
    private javax.swing.JLabel posicao_10l;
    private javax.swing.JLabel posicao_10r;
    private javax.swing.JLabel posicao_11l;
    private javax.swing.JLabel posicao_11r;
    private javax.swing.JLabel posicao_12l;
    private javax.swing.JLabel posicao_12r;
    private javax.swing.JLabel posicao_13l;
    private javax.swing.JLabel posicao_13r;
    private javax.swing.JLabel posicao_14l;
    private javax.swing.JLabel posicao_14r;
    private javax.swing.JLabel posicao_15l;
    private javax.swing.JLabel posicao_15r;
    private javax.swing.JLabel posicao_16l;
    private javax.swing.JLabel posicao_16r;
    private javax.swing.JLabel posicao_17l;
    private javax.swing.JLabel posicao_17r;
    private javax.swing.JLabel posicao_18l;
    private javax.swing.JLabel posicao_18r;
    private javax.swing.JLabel posicao_19l;
    private javax.swing.JLabel posicao_19r;
    private javax.swing.JLabel posicao_1l;
    private javax.swing.JLabel posicao_1r;
    private javax.swing.JLabel posicao_20l;
    private javax.swing.JLabel posicao_20r;
    private javax.swing.JLabel posicao_2l;
    private javax.swing.JLabel posicao_2r;
    private javax.swing.JLabel posicao_3l;
    private javax.swing.JLabel posicao_3r;
    private javax.swing.JLabel posicao_4l;
    private javax.swing.JLabel posicao_4r;
    private javax.swing.JLabel posicao_5l;
    private javax.swing.JLabel posicao_5r;
    private javax.swing.JLabel posicao_6l;
    private javax.swing.JLabel posicao_6r;
    private javax.swing.JLabel posicao_7l;
    private javax.swing.JLabel posicao_7r;
    private javax.swing.JLabel posicao_8l;
    private javax.swing.JLabel posicao_8r;
    private javax.swing.JLabel posicao_9l;
    private javax.swing.JLabel posicao_9r;
    private javax.swing.JLabel quit_background;
    private javax.swing.JPanel quit_panel;
    private javax.swing.JLabel rodadaganha;
    private javax.swing.JLabel rodadaperdida;
    private javax.swing.JButton sair;
    private javax.swing.JButton sair_button;
    private javax.swing.JLabel sendo;
    private javax.swing.JLabel toque_background;
    private javax.swing.JPanel toque_panel;
    private javax.swing.JLabel trophy_label;
    private javax.swing.JLabel vitoria;
    private javax.swing.JLabel win_count;
    private javax.swing.JPanel win_count_panel;
    private javax.swing.JLabel winner_background;
    private javax.swing.JLabel winner_count_background;
    private javax.swing.JLabel winner_count_icon;
    private javax.swing.JPanel winner_panel;
    // End of variables declaration//GEN-END:variables
}
